# Copyright (C) 2022 - 2024 ANSYS, Inc. and/or its affiliates.
# SPDX-License-Identifier: MIT
#
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

name: >
  Release PyPI action

description: >
  Release library artifacts to the desired PyPI index. If a private index is
  used, a ``token`` is required to publish the artifacts. Artifacts are
  downloaded from the CI/CD pipeline and are assumed to be named
  ``<library-name>-artifacts``. This file is expected to contain a wheel and a
  source distribution file for the desired library.

inputs:

  # Required inputs

  library-name:
    description: >
      Name of the Python library to be published.
    required: true
    type: string

  index-name:
    description: >
      The name of the index endpoint used for uploading the artifacts.
    required: true
    type: string

  twine-username:
    description: >
      User name used when uploading the artifacts to the desired PyPI index.
    required: true
    type: string

  twine-token:
    description: >
      Password used when uploading the artifacts to the desired PyPI index.
    required: true
    type: string

  python-version:
    description: >
      Python version for installing and using `twine
      <https://twine.readthedocs.io/en/stable/>`_.
    required: true
    type: string

  dry-run:
    description: >
      Whether to run or not this action in testing mode. Testing mode executes
      all the action steps except the releasing artifacts one. This allows
      developers to verify the health of the action once integrated in their
      CI/CD pipelines without actually publishing artifacts.
    required: true
    type: boolean

  skip-existing:
    description: >
      Continue uploading files if one already exists. Only valid when uploading
      to PyPI. Other implementations may not support this.
    required: true
    type: boolean

runs:
  using: "composite"
  steps:

    - name: "Set up Python"
      uses: ansys/actions/_setup-python@main
      with:
        python-version: ${{ inputs.python-version }}
        use-cache: false

    - name: "Install twine"
      shell: bash
      run: |
        python -m pip install --upgrade pip twine

    - name: "Download the library artifacts from build-library step"
      uses: actions/download-artifact@v4
      with:
        name: ${{ inputs.library-name }}-artifacts
        path: ${{ inputs.library-name }}-artifacts

    - name: "Display the structure of downloaded files"
      shell: bash
      run: ls -R

    - name: "Evaluate if skip-existing is required"
      shell: bash
      run: |
        if [[ ${{ inputs.skip-existing }} == 'true' ]]; then
          echo "SKIP_EXISTING=$(echo '--skip-existing')" >> $GITHUB_ENV
        else
          echo "SKIP_EXISTING=$(echo '')" >> $GITHUB_ENV
        fi

    - name: "Upload artifacts to private PyPi"
      shell: bash
      if: inputs.dry-run == 'false'
      run: |
        python -m twine upload --verbose ${{ env.SKIP_EXISTING }} ${{ inputs.library-name }}-artifacts/*.whl
        python -m twine upload --verbose ${{ env.SKIP_EXISTING }} ${{ inputs.library-name }}-artifacts/*.tar.gz
      env:
        TWINE_USERNAME: ${{ inputs.twine-username }}
        TWINE_PASSWORD: ${{ inputs.twine-token }}
        TWINE_REPOSITORY_URL: ${{ inputs.index-name }}
