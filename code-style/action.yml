name: >
  Code style

description: >
  This action evaluates the code quality of your project by using `pre-commit
  <https://github.com/pre-commit/pre-commit/>`_. The action installs and runs
  ``pre-commit``. It is assumed that your project contains a
  ``.pre-commit-config.yaml`` file in the root directory.

inputs:

  # Optional inputs

  python-version:
    description: >
      Python version used for installing and running ``pre-commit``.
    default: '3.10'
    required: false
    type: string

  use-python-cache:
    description: >
      Whether to use the Python cache for installing previously downloaded
      libraries. If ``true``, previously downloaded libraries are installed from the
      Python cache. If ``false``, libraries are downloaded from the PyPI index.
    required: false
    default: true
    type: boolean

  docker-recursive:
    description: >
      Search for Dockerfile(s) recursively. Only applies to directory 'docker'.
    required: false
    default: false

  docker-error-level:
    description: >
      Fail docker-style action based on hadolint output (-1: never, 0: error, 1: warning, 2: info)
    required: false
    default: 2

runs:
  using: "composite"
  steps:

    - name: "Install Git and clone project"
      uses: actions/checkout@v4

    - name: "Set up Python"
      uses: ansys/actions/_setup-python@main
      with:
        python-version: ${{ inputs.python-version }}
        use-cache: ${{ inputs.use-python-cache }}

    - name: "Install pre-commit"
      shell: bash
      run: |
        python -m pip install --upgrade pip pre-commit
        pre-commit install

    - name: "Run pre-commit"
      shell: bash
      run: pre-commit run --all-files --show-diff-on-failure

    # The followings steps are applying docker-style action to allowed working dirs if the exist.
    # Changes performed here should coherent with the 'allowed_working_dirs' in the docker-style action.
    - name: Check if docker directory exists
      shell: bash
      id: checkdocker
      run: |
        if [ -d "${{ github.workspace }}/docker" ]; then
          echo "::set-output name=exists::true"
        fi

    - name: Run Dockerfile linting in docker directory
      uses: ansys/actions/docker-style@feat/lint_dockerfile
      if: steps.checkdocker.outputs.exists == 'true'
      with:
        directory: docker
        recursive: ${{ inputs.docker-recursive }}
        error-level: ${{ inputs.docker-error-level }}

    - name: Check if .devcontainer directory exists
      shell: bash
      id: checkdevcontainer
      run: |
        if [ -d "${{ github.workspace }}/.devcontainer/Dockerfile" ]; then
          echo "::set-output name=exists::true"
        fi

    - name: Run Dockerfile linting in .devcontainer directory
      uses: ansys/actions/docker-style@feat/lint_dockerfile
      if: steps.checkdevcontainer.outputs.exists == 'true'
      with:
        directory: .devcontainer
        error-level: ${{ inputs.docker-error-level }}
