name: "Code style."
description: "Check code style using pre-commit."

inputs:
  python-version:
    description: 'Desired Python version for pre-commit.'
    default: '3.10'
    required: false
    type: string
  use-python-cache:
    description: 'Whether to use Python cache or not. Requires a pyproject.toml file.'
    required: false
    default: true
    type: boolean
  checkout:
      description: 'Whether to checkout the repository or not'
      default: true
      required: false
      type: boolean

runs:
  using: "composite"
  steps:
  
    - name: "Install Git and clone project"
      uses: actions/checkout@v3
      if: ${{ inputs.checkout == 'true' }}
  
    - name: "Set up Python"
      uses: pyansys/actions/_setup-python@main
      with:
        python-version: ${{ inputs.python-version }}
        use-cache: ${{ inputs.use-python-cache }}
  
    - name: "Install pre-commit"
      shell: bash
      run: |
        python -m pip install --upgrade pip pre-commit
        pre-commit install
  
    - name: "Run pre-commit"
      shell: bash
      run: pre-commit run --all-files --show-diff-on-failure
