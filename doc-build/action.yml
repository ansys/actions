name: >
  Documentation build action

description: >
  Build library documentation using `Sphinx
  <https://www.sphinx-doc.org/en/master/>`_. The action installs and uses
  `sphinx-build <https://www.sphinx-doc.org/en/master/man/sphinx-build.html>`_
  to generate documentation from the source. It requires that all the
  documentation is contained in the ``doc/`` directory of a project.
  Documentation dependencies need to be declared in a
  ``requirements/requirements_doc.txt`` file or in the ``[doc]`` section of the
  additional dependencies in the ``pyproject.toml`` file. The action locates the
  ``doc/Makefile`` file and runs the ``make html`` and ``make pdf`` commands. If
  desired, the ``make json`` command can also be executed to generate JSON
  documentation.

inputs:

  # Optional inputs

  python-version:
    description: >
        Python version used for installing and running ``Sphinx``.
    default: '3.10'
    required: false
    type: string

  use-python-cache:
    description: >
      Whether to use the Python cache for installing previously downloaded
      libraries. If ``true``, previously downloaded libraries are installed from the
      Python cache. If ``false``, libraries are downloaded from the PyPI index.
    required: false
    default: true
    type: boolean

  sphinxopts:
    description: >
      Set of options to pass to the ``Sphinx`` builder. Default options include
      using the maximum number of cores in the CPU of the machine and treating
      warnings as errors.
    default: '-j auto -W --keep-going'
    required: false
    type: string

  dependencies:
    description: >
      String of system dependencies to be installed before building the
      documentation of the project.
    default: ''
    required: false
    type: string

  requires-xvfb:
    description: >
      Whether to install `X Virtual Frame Buffer (XVFB)
      <https://www.x.org/releases/X11R7.6/doc/man/man1/Xvfb.1.xhtml>`_ and run
      the whole test session using XVFB. The default value is ``false``.

      If ``true``, installs `X Virtual Frame Buffer (XVFB)
      <https://www.x.org/releases/X11R7.6/doc/man/man1/Xvfb.1.xhtml>`_ and
      runs the whole test session using XVFB. Default value is ``false``.
    default: false
    required: false
    type: boolean

  skip-install:
    description: >
      Whether to skip the installation of the project. The default is ``false``.
      Pure documentation projects require that this action be set to ``false``
      because there is no Python library associated with the project.
    default: false
    required: false
    type: boolean

  checkout:
    description: >
      Whether to clone the repository in the CI/CD machine. Default value is
      ``true``.
    default: true
    required: false
    type: boolean

  skip-json-build:
    description: >
      Whether to skip the generation of JSON documentation. Default value is
      ``true``.
    default: true
    required: false
    type: boolean

runs:
  using: "composite"
  steps:

    - name: "Install Git and clone project"
      uses: actions/checkout@v3
      if: ${{ inputs.checkout == 'true' }}

    - name: "Collect system dependencies"
      shell: bash
      run: |
        if [[ ${{ inputs.requires-xvfb }} == 'true' ]]; then
          echo "NEEDED_DEPS=$(echo '${{ inputs.dependencies }} xvfb')" >> $GITHUB_ENV
        else
          echo "NEEDED_DEPS=$(echo '${{ inputs.dependencies }}')" >> $GITHUB_ENV
        fi

    - name: "Cache apt packages needed"
      uses: awalsh128/cache-apt-pkgs-action@v1
      with:
        packages: ${{ env.NEEDED_DEPS }}
        version: 1.0

    - name: "Update apt-get"
      shell: bash
      run: |
        sudo apt-get update

    - name: "Install system dependencies"
      shell: bash
      run: |
        sudo apt-get install ${{ env.NEEDED_DEPS }}

    - name: "Install LaTeX"
      shell: bash
      run: |
        sudo apt-get install texlive-latex-extra latexmk

    - name: "Set up Python"
      uses: ansys/actions/_setup-python@v4
      with:
        python-version: ${{ inputs.python-version }}
        use-cache: ${{ inputs.use-python-cache }}

    - name: "Update pip"
      shell: bash
      run: python -m pip install -U pip

    - name: "Install Python library"
      shell: bash
      if: inputs.skip-install == 'false'
      run:
        python -m pip install .

    - name: "Check if requirements.txt file exists"
      shell: bash
      run: |
        echo "EXISTS_DOC_REQUIREMENTS=$(if [ -f requirements/requirements_doc.txt ]; then echo 'true'; else echo 'false'; fi)" >> $GITHUB_ENV

    - name: "Print previous output"
      shell: bash
      run:
        echo "Output was found ${{ env.EXISTS_DOC_REQUIREMENTS }}"

    - name: "Install documentation dependencies from requirements file"
      shell: bash
      if: env.EXISTS_DOC_REQUIREMENTS == 'true'
      run: python -m pip install -r requirements/requirements_doc.txt

    - name: "Install documentation dependencies from pyproject.toml"
      shell: bash
      if: env.EXISTS_DOC_REQUIREMENTS == 'false'
      run: python -m pip install .[doc]

    - name: "Build HTML, PDF, and JSON documentation"
      if: inputs.requires-xvfb == 'false'
      shell: bash
      run: |
        make -C doc html SPHINXOPTS="${{ inputs.sphinxopts }}"
        make -C doc pdf
        if [[ ${{ inputs.skip-json-build }} == 'false' ]];
        then
          make -C doc json SPHINXOPTS="${{ inputs.sphinxopts }}"
        fi

    - name: "Build HTML, PDF, and JSON documentation using xvfb"
      if: inputs.requires-xvfb == 'true'
      shell: bash
      run: |
        xvfb-run make -C doc html SPHINXOPTS="${{ inputs.sphinxopts }}"
        xvfb-run make -C doc pdf
        if [[ ${{ inputs.skip-json-build }} == 'false' ]];
        then
          xvfb-run make -C doc json SPHINXOPTS="${{ inputs.sphinxopts }}"
        fi

    - name: "Upload HTML documentation artifact"
      uses: actions/upload-artifact@v3
      with:
        name: documentation-html
        path: doc/_build/html
        retention-days: 7

    - name: "Upload PDF documentation artifact"
      uses: actions/upload-artifact@v3
      with:
        name: documentation-pdf
        path: doc/_build/latex/*.pdf
        retention-days: 7

    - name: "Upload JSON documentation artifact"
      uses: actions/upload-artifact@v3
      if: inputs.skip-json-build == 'false'
      with:
        name: documentation-json
        path: doc/_build/json
        retention-days: 7
