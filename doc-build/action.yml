# Copyright (C) 2022 - 2024 ANSYS, Inc. and/or its affiliates.
# SPDX-License-Identifier: MIT
#
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

name: |
  Documentation build action

description: |
  Build library documentation using `Sphinx
  <https://www.sphinx-doc.org/en/master/>`_. The action installs documentation
  dependencies provided either in a requirement file, e.g.
  ``requirements/requirements_doc.txt``, or in the ``[doc]`` section of the
  additional dependencies in the ``pyproject.toml`` file. Assuming that
  `sphinx-build
  <https://www.sphinx-doc.org/en/master/man/sphinx-build.html>`_ is available
  after installing the documentation dependencies, the action uses it
  to generate documentation from the source. It requires that all the
  documentation is contained in the ``doc/`` directory of a project. Depending
  on the operating system, the action locates the ``doc/Makefile``
  (resp. ``doc/make.bat``) file for Linux (resp. Windows) and runs the
  ``make html`` (resp. ``make.bat html``) and ``make pdf``
  (resp. ``make.bat pdf``) commands. If desired, the ``make json`` (resp.
  ``make.bat json``) command can also be executed to generate JSON
  documentation.

inputs:

  # Optional inputs

  python-version:
    description: |
      Python version used for installing and running ``Sphinx``.
    default: '3.10'
    required: false
    type: string

  use-python-cache:
    description: |
      Whether to use the Python cache for installing previously downloaded
      libraries. If ``true``, previously downloaded libraries are installed from the
      Python cache. If ``false``, libraries are downloaded from the PyPI index.
    required: false
    default: true
    type: boolean

  sphinxopts:
    description: |
      Set of options to pass to the ``Sphinx`` builder. Default options include
      using the maximum number of cores in the CPU of the machine and treating
      warnings as errors.

      .. note::

        This will override the ``SPHINXOPTS`` declared in your Makefile.

    default: '-j auto -W --keep-going'
    required: false
    type: string

  dependencies:
    description: |
      String of system dependencies to be installed before building the
      documentation of the project.
    default: ''
    required: false
    type: string

  skip-dependencies-cache:
    description: |
      Whether to ignore dependencies cache or not - for OS libraries.
    required: true
    default: false
    type: boolean

  requires-xvfb:
    description: |
      Whether to install `X Virtual Frame Buffer (XVFB)
      <https://www.x.org/releases/X11R7.6/doc/man/man1/Xvfb.1.xhtml>`_ and run
      the whole test session using XVFB. The default value is ``false``.

      If ``true``, installs `X Virtual Frame Buffer (XVFB)
      <https://www.x.org/releases/X11R7.6/doc/man/man1/Xvfb.1.xhtml>`_ and
      runs the whole test session using XVFB. Default value is ``false``.

      .. warning::

        This option is not taken into account when runner ``os`` is ``'Windows'``.

    default: false
    required: false
    type: boolean

  skip-install:
    description: |
      Whether to skip the installation of the project. The default is ``false``.
      Pure documentation projects require that this action be set to ``false``
      because there is no Python library associated with the project.
    default: false
    required: false
    type: boolean

  requirements-file:
    description: |
      Path to the requirements file in case it needs to be in a specific location.
      This is useful for non python projects, where you don't necessarily have a requirements
      file in the root of the project.
    default: 'requirements/requirements_doc.txt'
    required: false
    type: string

  checkout:
    description: |
      Whether to clone the repository in the CI/CD machine. Default value is
      ``true``.
    default: true
    required: false
    type: boolean

  skip-json-build:
    description: |
      Whether to skip the generation of JSON documentation. Default value is
      ``true``.
    default: true
    required: false
    type: boolean

  check-links:
    description: |
      Whether to perform external link checks during the generation of
      documentation. Default value is ``true``.
    default: true
    required: false
    type: boolean

  add-pdf-html-docs-as-assets:
    description: |
      Whether to add PDF and HTML documentation as assets of the HTML
      documentation. The HTML documentation is compressed before being added.
      The PDF file name is expected to be the same as the project name defined
      in the pyproject.toml file. Default value is ``false``.

      .. warning::

        The HTML files are expected to be contained in ``doc/_build`` and the
        PDF file is copied in ``doc/_build/html/_static/assets/download``.
        If such directories do not exist in your repo, the action will fail.

    default: false
    required: false
    type: boolean

  needs-quarto:
    description: >
      Whether to add a Quarto cheatsheet to the documentation. Default value is
      ``false``.
    default: false
    required: false
    type: boolean

runs:
  using: "composite"
  steps:

    # --------------- Common to linux and windows doc-build ----------------

    - name: "Install Git and clone project"
      uses: actions/checkout@v4
      if: ${{ inputs.checkout == 'true' }}

    - name: "Set up Python"
      uses: ansys/actions/_setup-python@main
      with:
        python-version: ${{ inputs.python-version }}
        use-cache: ${{ inputs.use-python-cache }}

    # ------------------------------------------------------------------------

    - name: Documentation build (Linux)
      if: ${{ runner.os == 'Linux' }}
      uses: ansys/actions/_doc-build-linux@main
      with:
        sphinxopts: ${{ inputs.sphinxopts }}
        dependencies: ${{ inputs.dependencies }}
        skip-dependencies-cache: ${{ inputs.skip-dependencies-cache }}
        requires-xvfb: ${{ inputs.requires-xvfb }}
        skip-install: ${{ inputs.skip-install }}
        requirements-file: ${{ inputs.requirements-file }}
        skip-json-build: ${{ inputs.skip-json-build }}
        check-links: ${{ inputs.check-links }}
        add-pdf-html-docs-as-assets: ${{ inputs.add-pdf-html-docs-as-assets }}
        needs-quarto: ${{ inputs.needs-quarto }}

    # ------------------------------------------------------------------------

    - name: Check input (Windows)
      if: ${{ (runner.os == 'Windows') && (inputs.requires-xvfb == 'true') }}
      uses: ansys/actions/_logging@main
      with:
        level: "WARNING"
        message: >
          X virtual framebuffer is not used when building with Windows.

    - name: Documentation build (Windows)
      if: ${{ runner.os == 'Windows' }}
      uses: ansys/actions/_doc-build-windows@main
      with:
        sphinxopts: ${{ inputs.sphinxopts }}
        dependencies: ${{ inputs.dependencies }}
        skip-dependencies-cache: ${{ inputs.skip-dependencies-cache }}
        skip-install: ${{ inputs.skip-install }}
        requirements-file: ${{ inputs.requirements-file }}
        skip-json-build: ${{ inputs.skip-json-build }}
        check-links: ${{ inputs.check-links }}
        add-pdf-html-docs-as-assets: ${{ inputs.add-pdf-html-docs-as-assets }}
        needs-quarto: ${{ inputs.needs-quarto }}
