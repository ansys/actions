name: "Documentation build."
description: "Build library documentation using Sphinx."

inputs:
  python-version:
    description: 'Desired Python version for sphinx-build.'
    default: '3.10'
    required: false
    type: string
  use-python-cache:
    description: 'Whether to use Python cache or not. Requires a pyproject.toml file.'
    required: false
    default: true
    type: boolean
  sphinxopts:
    description: 'Set of options to pass to the Sphinx builder.'
    default: '-j auto -W --keep-going'
    required: false
    type: string
  dependencies:
    description: 'Set of system dependencies.'
    default: ''
    required: false
    type: string
  requires-xvfb:
      description: 'Requires the usage of X Virtual Frame Buffer.'
      default: false
      required: false
      type: boolean
  skip-install:
      description: 'Whether to skip the installation of the Python library.'
      default: false
      required: false
      type: boolean
  checkout:
      description: 'Whether to checkout the repository or not'
      default: true
      required: false
      type: boolean

runs:
  using: "composite"
  steps:
  
    - name: "Install Git and clone project"
      uses: actions/checkout@v3
      if: ${{ inputs.skip-install == 'false' && inputs.checkout == 'true' }}

    - name: "Check if X Virtual Frame Buffer is needed"
      shell: bash
      if: inputs.requires-xvfb == 'true'
      run: |
        echo "NEEDED_DEPS=$(echo '${{ inputs.dependencies }} xvfb')" >> $GITHUB_ENV

    - name: "Cache apt packages needed"
      uses: awalsh128/cache-apt-pkgs-action@v1
      with:
        packages: ${{ env.NEEDED_DEPS }}
        version: 1.0

    - name: "Install LaTeX"
      shell: bash
      run: |
        sudo apt-get install texlive-latex-extra latexmk

    - name: "Set up Python"
      uses: pyansys/actions/_setup-python@main
      with:
        python-version: ${{ inputs.python-version }}
        use-cache: ${{ inputs.use-python-cache }}

    - name: "Update pip"
      shell: bash
      run: python -m pip install -U pip

    - name: "Install Python library"
      shell: bash
      if: inputs.skip-install == 'false'
      run:
        python -m pip install .

    - name: "Check if requirements.txt file exists"
      shell: bash
      run: |
        echo "EXISTS_DOC_REQUIREMENTS=$(if [ -f requirements/requirements_doc.txt ]; then echo 'true'; else echo 'false'; fi)" >> $GITHUB_ENV

    - name: "Print previous output"
      shell: bash
      run:
        echo "Output was found ${{ env.EXISTS_DOC_REQUIREMENTS }}"

    - name: "Install documentation dependencies from requirements file"
      shell: bash
      if: env.EXISTS_DOC_REQUIREMENTS == 'true'
      run: python -m pip install -r requirements/requirements_doc.txt

    - name: "Install documentation dependencies from pyproject.toml"
      shell: bash
      if: env.EXISTS_DOC_REQUIREMENTS == 'false'
      run: python -m pip install .[doc]
    
    - name: "Build HTML, PDF, and JSON documentation"
      if: inputs.requires-xvfb == 'false'
      shell: bash
      run: |
        make -C doc html SPHINXOPTS="${{ inputs.sphinxopts }}"
        make -C doc pdf
        make -C doc json SPHINXOPTS="${{ inputs.sphinxopts }}"

    - name: "Build HTML and JSON documentation using xvfb"
      if: inputs.requires-xvfb == 'true'
      shell: bash
      run: |
        xvfb-run make -C doc html SPHINXOPTS="${{ inputs.sphinxopts }}"
        xvfb-run make -C doc pdf
        xvfb-run make -C doc json SPHINXOPTS="${{ inputs.sphinxopts }}"

    - name: "Upload HTML documentation artifact"
      uses: actions/upload-artifact@v3
      with:
        name: documentation-html
        path: doc/_build/html
        retention-days: 7

    - name: "Upload PDF documentation artifact"
      uses: actions/upload-artifact@v3
      with:
        name: documentation-pdf
        path: doc/_build/latex/*.pdf
        retention-days: 7

    - name: "Upload JSON documentation artifact"
      uses: actions/upload-artifact@v3
      with:
        name: documentation-json
        path: doc/_build/json
        retention-days: 7
