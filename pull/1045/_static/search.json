[{"objectID":"Home","href":"style-actions/index.html#style-actions","title":"Style actions","text":"Style actions\n\nStyle actions verify code and documentation quality compliance\nwith PyAnsys guidelines."},{"objectID":"Home","href":"style-actions/index.html#code-style-action","title":"Style actions > Code style action","text":"Code style action\n\nThis action evaluates the code quality of your project by using pre-commit. The action installs and runs\npre-commit. It is assumed that your project contains a\n.pre-commit-config.yaml file in the root directory. The action can also\nbe extended to lint docker files that are contained in the docker directory\nand the .devcontainer directory.\n\nIf docker lint is enabled and directories docker or .devcontainer exist,\nthe action will fail if it doesn’t find a Dockerfile.\n\nSource code for this action \n\n\n\n\n\n\n\n\n\n\n\nInput\n\nDescription\n\nRequired\n\nType\n\nDefault\n\npython-version\n\nPython version used for installing and running pre-commit.\n\nFalse\n\nstring\n\n3.11\n\nuse-python-cache\n\nWhether to use the Python cache for installing previously downloaded\nlibraries. If true, previously downloaded libraries are installed from the\nPython cache. If false, libraries are downloaded from the PyPI index.\n\nFalse\n\nboolean\n\nTrue\n\npre-commit-version\n\nThe version of pre-commit to install.\n\nFalse\n\nstring\n\n3.8.0\n\ndocker-lint\n\nExtend the workflow to lint Dockerfile(s).\n\nFalse\n\nbool\n\nFalse\n\ndocker-recursive\n\nSearch for Dockerfile(s) recursively. Only applies to allowed\ndirectories, i.e. docker and .devcontainer.\n\nFalse\n\nbool\n\nFalse\n\ndocker-error-level\n\nFail docker-style action based on hadolint output (-1: never, 0: error,\n1: warning, 2: info)\n\nFalse\n\nint\n\n2\n\nskip-install\n\nWhether to skip the installation of the project or not. If true, the\nproject is not installed. If false, the project is installed. By\ndefault, the project is not installed.\n\nFalse\n\nboolean\n\nTrue\n\nshow-diff-on-failure\n\nWhether to show the diff when a pre-commit hook fails.\n\nFalse\n\nboolean\n\nTrue\n\nuse-uv\n\nWhether to use uv as the default package manager instead of pip. Default value is true.\n\nFalse\n\nboolean\n\nTrue\n\ncheckout\n\nWhether to do a checkout step or not. If true, the checkout step is performed.\nIf false, the checkout is skipped allowing the workspace from a prior step to\nbe used unaltered. By default it is set to true.\n\nFalse\n\nboolean\n\nTrue"},{"objectID":"Home","href":"style-actions/index.html#examples","title":"Style actions > Examples","text":"Examples\n\nRunning code style checks"},{"objectID":"Home","href":"style-actions/index.html#doc-style-action","title":"Style actions > Doc style action","text":"Doc style action\n\nCheck documentation style using Vale. This action is a\nwrapper on top of the errata-ai/vale-action.\n\nSource code for this action \n\n\n\n\n\n\n\n\n\n\n\nInput\n\nDescription\n\nRequired\n\nType\n\nDefault\n\ntoken\n\nThe token value used to authorize Vale to add comments and suggestions in\nthe file section.\n\nTrue\n\nstring\n\n\n\nfiles\n\nPath to the directory containing the documentation files.\n\nFalse\n\nstring\n\ndoc\n\nvale-config\n\nPath to the Vale configuration file.\n\nFalse\n\nstring\n\ndoc/.vale.ini\n\nvale-version\n\nVersion number for Vale.\n\nFalse\n\nstring\n\n3.4.1\n\ntomli-version\n\nTomli version used for retrieving the towncrier directory.\n\nFalse\n\nstring\n\n2.2.1\n\nignore-changelogd\n\nWhether or not to ignore markdown files in doc/changelog.d/.\n\nFalse\n\nbool\n\nTrue\n\ncheckout\n\nWhether to clone the repository in the CI/CD machine. Default value is\ntrue.\n\nFalse\n\nboolean\n\nTrue\n\nfail-level\n\nReport level used to control check results. Default value is \"error\"\nand if at least one issue with severity greater than or equal to\n\"error\" is detected then the action exits with status code 1.\n\nFalse\n\nstring\n\nerror"},{"objectID":"Home","href":"style-actions/index.html#examples","title":"Style actions > Examples","text":"Examples\n\nRunning documentation style checks"},{"objectID":"Home","href":"style-actions/index.html#docker-style-action","title":"Style actions > Docker style action","text":"Docker style action\n\nEvaluate the quality of your project Dockerfile(s) by using hadolint. This action can be used to\nlint Dockerfile(s) from multiple directories, see input “directory”\ndescription. The action uses hadolint-gh-action behind the scenes.\nIf you want to evaluate multiple Dockerfiles contained in various\ndirectories of the provided directory, use the recursive option.\nWhen linting a Dockerfile dedicated to Windows, one should use hadolint\nshell pragma to avoid false positives from ShellCheck, see hadolint shell pragma.\n\nThis action emphasizes the fact of having Dockerfile(s) contained inside the\n‘docker’ directory in the root of the project.\n\nThis action only looks for docker files named Dockerfile.\nA docker file like Dockerfile.linux will not be linted.\n\nSource code for this action \n\n\n\n\n\n\n\n\n\n\n\nInput\n\nDescription\n\nRequired\n\nType\n\nDefault\n\ndirectory\n\nDirectory from which to search for Dockerfile(s). You can pass multiple\ndirectories for processing by separating them with spaces, e.g.\n“docker .devcontainer”.\n\nFalse\n\nstring\n\ndocker\n\nrecursive\n\nSearch for Dockerfile(s) recursively.\n\nFalse\n\nbool\n\nFalse\n\nerror-level\n\nFail action based on hadolint output (-1: never, 0: error, 1: warning,\n2: info)\n\nFalse\n\nint\n\n2\n\ncheckout\n\nWhether to clone the repository in the CI/CD machine. Default value is\ntrue.\n\nFalse\n\nboolean\n\nTrue"},{"objectID":"Home","href":"style-actions/index.html#examples","title":"Style actions > Examples","text":"Examples\n\nDocker style"},{"objectID":"Home","href":"style-actions/index.html#pull-request-title-action","title":"Style actions > Pull request title action","text":"Pull request title action\n\nAction that checks if the title of the pull request is following the\nconventional commits standard.\n\nSource code for this action \n\n\n\n\n\n\n\n\n\n\n\nInput\n\nDescription\n\nRequired\n\nType\n\nDefault\n\ntoken\n\nThe token value used to authorize Vale to add comments and suggestions in\nthe file section.\n\nTrue\n\nstring\n\n\n\nuse-upper-case\n\nUse of uppercase letters in the “type” field of the commit.\nFor example, “FIX!: fix server crash issue” would be a valid commit.\n\nExpected type are upper cases of conventional commit types.\n\nFalse\n\nboolean\n\nFalse"},{"objectID":"Home","href":"style-actions/index.html#examples","title":"Style actions > Examples","text":"Examples\n\nCheck pull-request title follows conventional commits"},{"objectID":"Home","href":"migrations/docs-deploy-changelog-setup.html#doc-deploy-changelog-action-setup","title":"Doc-deploy-changelog action setup","text":"Doc-deploy-changelog action setup\n\nWhen a new tag is pushed, the doc-deploy-changelog action generates a new section of the CHANGELOG.md file\nif fragment files exist in their designated directory, for example doc/changelog.d. By default, the\nCHANGELOG.md file is updated in the release branch corresponding to the tag being pushed, such as release/0.1,\nand a pull request is created to merge the CHANGELOG update and deleted fragment files into main.\n\nUse the following link to set up the ansys/actions/doc-changelog action before setting up the doc-deploy-changelog action: docs_changelog_action_setup\nOnce the doc-changelog action is done being set up, continue with the doc-deploy-changelog action setup:\n\nAdd the doc-deploy-changelog as the first job of the ci_cd.yml file, and make the update-changelog job a requirement of the release job:\n\nPyAnsys CI Bot needs to be an Admin of the repository to run the doc-deploy-changelog action.\n\nOptional - Add the package line to the tool.towncrier section of the pyproject.toml. This is the same as the name under tool.flit.module:"},{"objectID":"Home","href":"index.html#ansys-actions","title":"Ansys actions","text":"Ansys actions\n\nAdapting to a new version?\n\nIf you are adapting to a new version of the actions, see the\nmigration_guide.\n\nFor more information on available actions and how to use them,\nsee each of these cards:\n\n Style actions\n\nStyle actions verify code and documentation.\n\nstyle-actions/index\n\n Tests actions\n\nTests actions allow to run the test suite.\n\ntests-actions/index\n\n Docs actions\n\nDocumentation actions build and deploy the documentation.\n\ndoc-actions/index\n\n License actions\n\nLicense actions allows to verify that the project’s dependencies only contain valid licenses.\n\nlicenses-actions/index\n\n Build actions\n\nBuild actions allow for building artifacts.\n\nbuild-actions/index\n\n Release actions\n\nRelease actions provide for releasing the various artifacts.\n\nrelease-actions/index\n\n Housekeeping actions\n\nHousekeeping actions provide for general repository operations such as package cleanup.\n\nhousekeeping-actions/index\n\n Vulnerabilities actions\n\nVulnerabilities actions provide for actively checking library and third party vulnerabilities.\n\nvulnerability-actions/index\n\n Changelog\n\nHistory of changes to the project.\n\nchangelog\n\n"},{"objectID":"Home","href":"doc-actions/index.html#documentation-actions","title":"Documentation actions","text":"Documentation actions\n\nDocumentation actions build and deploy the documentation of\na PyAnsys project.\n\nTo use these actions, a project must use Sphinx\nas documentation parser."},{"objectID":"Home","href":"doc-actions/index.html#doc-build-action","title":"Documentation actions > Doc build action","text":"Doc build action\n\nBuild library documentation using Sphinx. The action installs documentation\ndependencies provided either in a requirement file, e.g.\nrequirements/requirements_doc.txt, or in the [doc] section of the\nadditional dependencies in the pyproject.toml file. Assuming that\nsphinx-build is available\nafter installing the documentation dependencies, the action uses it\nto generate documentation from the source. It requires that all the\ndocumentation is contained in the doc/ directory of a project. Depending\non the operating system, the action locates the doc/Makefile\n(resp. doc/make.bat) file for Linux (resp. Windows) and runs the\nmake html (resp. make.bat html) and make pdf\n(resp. make.bat pdf) commands. If desired, the make json (resp.\nmake.bat json) command can also be executed to generate JSON\ndocumentation.\n\nSource code for this action \n\n\n\n\n\n\n\n\n\n\n\nInput\n\nDescription\n\nRequired\n\nType\n\nDefault\n\npython-version\n\nPython version used for installing and running Sphinx.\n\nFalse\n\nstring\n\n3.11\n\nuse-python-cache\n\nWhether to use the Python cache for installing previously downloaded\nlibraries. If true, previously downloaded libraries are installed from the\nPython cache. If false, libraries are downloaded from the PyPI index.\n\nFalse\n\nboolean\n\nTrue\n\nsphinxopts\n\nSet of options to pass to the Sphinx builder. Default options include\nusing the maximum number of cores in the CPU of the machine and treating\nwarnings as errors.\n\nThis will override the SPHINXOPTS declared in your Makefile.\n\nFalse\n\nstring\n\n-j auto -W –keep-going\n\ndependencies\n\nString of system dependencies to be installed before building the\ndocumentation of the project.\n\nFalse\n\nstring\n\n\n\nskip-dependencies-cache\n\nWhether to ignore dependencies cache or not - for OS libraries.\n\nTrue\n\nboolean\n\nFalse\n\nrequires-xvfb\n\nWhether to install X Virtual Frame Buffer (XVFB) and run\nthe whole test session using XVFB. The default value is false.\n\nIf true, installs X Virtual Frame Buffer (XVFB) and\nruns the whole test session using XVFB. Default value is false.\n\nThis option is not taken into account when runner os is 'Windows'.\n\nFalse\n\nboolean\n\nFalse\n\nskip-install\n\nWhether to skip the installation of the project. The default is false.\nPure documentation projects require that this action be set to false\nbecause there is no Python library associated with the project.\n\nFalse\n\nboolean\n\nFalse\n\nrequirements-file\n\nPath to the requirements file in case it needs to be in a specific location.\nThis is useful for non python projects, where you don’t necessarily have a requirements\nfile in the root of the project.\n\nFalse\n\nstring\n\nrequirements/requirements_doc.txt\n\ncheckout\n\nWhether to clone the repository in the CI/CD machine. Default value is\ntrue.\n\nFalse\n\nboolean\n\nTrue\n\ncheck-links\n\nWhether to perform external link checks during the generation of\ndocumentation. Default value is true.\n\nFalse\n\nboolean\n\nTrue\n\nadd-pdf-html-docs-as-assets\n\nWhether to add PDF and HTML documentation as assets of the HTML\ndocumentation. The HTML documentation is compressed before being added.\nThe PDF file name is expected to be the same as the project name defined\nin the pyproject.toml file. Default value is false.\n\nThe HTML files are expected to be contained in doc/_build and the\nPDF file is copied in doc/_build/html/_static/assets/download.\nIf such directories do not exist in your repo, the action will fail.\n\nFalse\n\nboolean\n\nFalse\n\nneeds-quarto\n\nWhether to add a Quarto cheatsheet to the documentation. Default value is false.\n.. warning:\n\nFalse\n\nboolean\n\nFalse\n\nuse-uv\n\nWhether to use uv as the default package manager instead of pip. Default value is true.\n\nFalse\n\nboolean\n\nTrue\n\noptional-dependencies-name\n\nAny valid install targets/extras defined in the pyproject.toml file, or the suffix\nof a requirement file. Multiple targets can be specified as a comma-separated\nlist (space-separated for poetry-based projects). The associated dependencies are installed\nbefore building the documentation. Default value is doc.\n\nFalse\n\nstring\n\ndoc\n\ngroup-dependencies-name\n\nAny valid dependency groups defined in the pyproject.toml file. Multiple\ntargets can be specified as a comma-separated list. The associated dependencies\nare installed before running the documentation build. Default value is ''\nin which case the action will not use dependency groups.\n\nFalse\n\nstring\n\n\n\nuploaded-artifact-name-prefix\n\nA prefix prepended to the name of the uploaded html and pdf artifacts.\nThe full name is <prefix>-html and <prefix>-pdf for the html and\npdf artifacts respectively. Default value is documentation.\n\nFalse\n\nstring\n\ndocumentation"},{"objectID":"Home","href":"doc-actions/index.html#examples","title":"Documentation actions > Examples","text":"Examples\n\nInstalling additional system dependencies for building documentation\n\nBuilding library documentation that using XVFB\n\nBuilding library documentation"},{"objectID":"Home","href":"doc-actions/index.html#doc-deploy-dev-action","title":"Documentation actions > Doc deploy dev action","text":"Doc deploy dev action\n\nThis action deploys the desired HTML documentation artifact containing the\ndevelopment version of a library to the specified branch of a repository. By\ndefault, the gh-pages branch of the current repository is assumed.\n\nSource code for this action \n\n\n\n\n\n\n\n\n\n\n\nInput\n\nDescription\n\nRequired\n\nType\n\nDefault\n\ncname\n\nThe canonical name (CNAME) containing the documentation.\n\nTrue\n\nstring\n\n\n\ntoken\n\nRequired password, key or token with the correct credentials for deploying the\ndocumentation. If deploying to the current repository, the secrets.GITHUB_TOKEN token\nis enough. For workflows deploying to other repositories, generate and\nuse a token with writing access\nto that repository.\n\nTrue\n\nstring\n\n\n\nbot-user\n\nUse the PYANSYS_CI_BOT_USERNAME as the user for a git commit & push.\n\nTrue\n\nstring\n\n\n\nbot-email\n\nUse the PYANSYS_CI_BOT_EMAIL as the email for a git commit & push.\n\nTrue\n\nstring\n\n\n\ndoc-artifact-name\n\nName of the HTML documentation artifact. This artifact is expected to\ncontain all the HTML and static files. If it contains a compressed file,\nmake sure you enable the decompress-artifact option.\n\nFalse\n\nstring\n\ndocumentation-html\n\ndecompress-artifact\n\nWether to decompress the artifact using ouch as decompression tool. Default value\nis false.\n\nFalse\n\nstring\n\nFalse\n\nrepository\n\nRepository name in the form of username/repository to be used for\ndeploying the documentation. The current repository is assumed by default.\n\nFalse\n\nstring\n\ncurrent\n\nbranch\n\nBranch name for deploying the documentation. The gh-pages branch is\nused by default.\n\nFalse\n\nstring\n\ngh-pages\n\ncommit-message\n\nCommit message used when deploying the documentation.\n\nFalse\n\nstring\n\nDOC: update development documentation\n\nforce-orphan\n\nWhether to force the deployment branch to be orphan with only the latest commit or not. Default value\nis true.\n\nFalse\n\nstring\n\nTrue\n\ncontent-element-id\n\nIdentifier of the HTML tag that comprises all the content of the article\nor post.\n\nFalse\n\nstring\n\nmain-content\n\nuse-latest-index-in-landing-page\n\nUse the latest ‘version/{stable|dev}/index.html’ in the landing page. Default\nvalue is true. By default, the index.html is overwritten by version/{stable|dev}/index.html.\n\nFalse\n\nstring\n\nTrue"},{"objectID":"Home","href":"doc-actions/index.html#examples","title":"Documentation actions > Examples","text":"Examples\n\nDeploy developers documentation"},{"objectID":"Home","href":"doc-actions/index.html#doc-deploy-stable-action","title":"Documentation actions > Doc deploy stable action","text":"Doc deploy stable action\n\nThis action deploys the desired HTML documentation artifact containing the\nstable version of a library to the specified branch of a repository. By\ndefault, the gh-pages branch of the current repository is assumed.\n\nIf your project is using ansys/actions@v3 or lower and you would\nlike to update to this version of the actions, see the Enable multi-version documentation .\n\nPre-releases are not supported prior to ansys/actions/v10.1. See the migration guide\nfor information on supported pre-releases.\n\nSource code for this action \n\n\n\n\n\n\n\n\n\n\n\nInput\n\nDescription\n\nRequired\n\nType\n\nDefault\n\ncname\n\nThe canonical name (CNAME) containing the documentation.\n\nTrue\n\nstring\n\n\n\ntoken\n\nRequired password, key or token with the correct credentials for deploying the\ndocumentation. If deploying to the current repository, the secrets.GITHUB_TOKEN token is\nis enough. For workflows deploying to other repositories, generate and\nuse a token with writing access\nto that repository.\n\nTrue\n\nstring\n\n\n\nbot-user\n\nUse the PYANSYS_CI_BOT_USERNAME as the user for a git commit & push.\n\nTrue\n\nstring\n\n\n\nbot-email\n\nUse the PYANSYS_CI_BOT_EMAIL as the email for a git commit & push.\n\nTrue\n\nstring\n\n\n\ndoc-artifact-name\n\nName of the HTML documentation artifact. This artifact is expected to\ncontain all the HTML and static files. If it contains a compressed file,\nmake sure you enable the decompress-artifact option.\n\nFalse\n\nstring\n\ndocumentation-html\n\ndecompress-artifact\n\nWhether to decompress the doc-artifact-name file using ouch as decompression tool. Default value\nis false.\n\nFalse\n\nstring\n\nFalse\n\nrepository\n\nRepository name in the form of username/repository to be used for\ndeploying the documentation. The current repository is assumed by default.\n\nFalse\n\nstring\n\ncurrent\n\nbranch\n\nBranch name for deploying the documentation. The gh-pages branch is\nused by default.\n\nFalse\n\nstring\n\ngh-pages\n\ncommit-message\n\nCommit message used when deploying the documentation.\n\nFalse\n\nstring\n\nDOC: update development documentation\n\nrender-last\n\nThe number of stable versions to be shown in the version drop-down.\n\nFalse\n\nstring\n\n3\n\nforce-orphan\n\nWhether to force the deployment branch to be orphan or not. Default value\nis true.\n\nFalse\n\nstring\n\nTrue\n\ncontent-element-id\n\nIdentifier of the HTML tag that comprises all the content of the article\nor post.\n\nFalse\n\nstring\n\nmain-content\n\nindependent-patch-release-docs\n\nWhether to generate documentation for independent patch releases. Default\nvalue is false. By default, patch releases will overwrite the\ndocumentation of the previous patch release. If this option is enabled,\nthen the documentation of each patch release will be kept.\n\nFalse\n\nboolean\n\nFalse\n\nuse-latest-index-in-landing-page\n\nUse the latest ‘version/{stable|dev}/index.html’ in the landing page. Default\nvalue is true. By default, the index.html is overwritten by version/{stable|dev}/index.html.\n\nFalse\n\nstring\n\nTrue\n\npython-version\n\nPython version used for various steps of the action\n\nFalse\n\nstring\n\n3.13\n\nuse-python-cache\n\nWhether to use the Python cache to install previously downloaded libraries.\nIf true, downloaded libraries are installed from cache. If false,\nthey are downloaded from the PyPI index.\n\nFalse\n\nboolean\n\nTrue\n\nuse-uv\n\nWhether to use uv as the default package manager instead of pip. Default value is true.\n\nFalse\n\nboolean\n\nTrue"},{"objectID":"Home","href":"doc-actions/index.html#examples","title":"Documentation actions > Examples","text":"Examples\n\nDeploy stable documentation"},{"objectID":"Home","href":"doc-actions/index.html#doc-deploy-pr-action","title":"Documentation actions > Doc deploy pr action","text":"Doc deploy pr action\n\nThis action deploys the HTML documentation artifact corresponding to the\npull request that triggers it. By default, the gh-pages branch of the\ncurrent repository is assumed, and the documentation will be available at\nhttps://<cname>/pull/<pr-number>/. The action also removes the deployed\nPR documentation once the pull request is closed.\n\nSource code for this action \n\n\n\n\n\n\n\n\n\n\n\nInput\n\nDescription\n\nRequired\n\nType\n\nDefault\n\ncname\n\nThe canonical name (CNAME) containing the documentation.\n\nTrue\n\nstring\n\n\n\ntoken\n\nRequired password, key or token with the correct credentials for deploying the\ndocumentation. If deploying to the current repository, the secrets.GITHUB_TOKEN token is\nis enough. For workflows deploying to other repositories, generate and\nuse a token with writing access\nto that repository. contents: write and pull-requests: write are minimum permissions required for this token.\n\nTrue\n\nstring\n\n\n\nbot-user\n\nUse the PYANSYS_CI_BOT_USERNAME as the user for a git commit & push.\n\nTrue\n\nstring\n\n\n\nbot-email\n\nUse the PYANSYS_CI_BOT_EMAIL as the email for a git commit & push.\n\nTrue\n\nstring\n\n\n\ndoc-artifact-name\n\nName of the HTML documentation artifact. This artifact is expected to\ncontain all the HTML and static files. If it contains a compressed file,\nmake sure you enable the decompress-artifact option.\n\nFalse\n\nstring\n\ndocumentation-html\n\ndecompress-artifact\n\nWhether to decompress the doc-artifact-name file using ouch as decompression tool. Default value\nis false.\n\nFalse\n\nstring\n\nFalse\n\nrepository\n\nRepository name in the form of username/repository to be used for\ndeploying the documentation. The current repository is assumed by default.\n\nFalse\n\nstring\n\ncurrent\n\nbranch\n\nBranch name for deploying the documentation. The gh-pages branch is\nused by default.\n\nFalse\n\nstring\n\ngh-pages\n\ncommit-message\n\nCommit message used when deploying the documentation.\n\nFalse\n\nstring\n\nDOC: update pull request documentation\n\nforce-orphan\n\nWhether to force the deployment branch to be orphan or not. Default value\nis true.\n\nFalse\n\nstring\n\nTrue\n\nmaximum-pr-doc-deployments\n\nThe maximum number of deployable pull requests documentation.\n\nFalse\n\nnumber\n\n5"},{"objectID":"Home","href":"doc-actions/index.html#examples","title":"Documentation actions > Examples","text":"Examples\n\nDeploy PR documentation"},{"objectID":"Home","href":"doc-actions/index.html#doc-changelog-action","title":"Documentation actions > Doc changelog action","text":"Doc changelog action\n\nAdds a newsfragment to the target repository using towncrier\ncontaining the title and number of the pull request.\n\nThis action will only work on Linux/macOS runners.\n\nSource code for this action \n\n\n\n\n\n\n\n\n\n\n\nInput\n\nDescription\n\nRequired\n\nType\n\nDefault\n\ntoken\n\nUse the PYANSYS_CI_BOT_TOKEN to do a git commit & push.\nThe “contents: write” and “pull-requests: write” permissions\nare required for this action.\n\nTrue\n\nstring\n\n\n\nbot-user\n\nUse the PYANSYS_CI_BOT_USERNAME as the user for a git commit & push.\n\nTrue\n\nstring\n\n\n\nbot-email\n\nUse the PYANSYS_CI_BOT_EMAIL as the email for a git commit & push.\n\nTrue\n\nstring\n\n\n\npython-version\n\nPython version used for setting up Python.\n\nFalse\n\nstring\n\n3.11\n\ntowncrier-version\n\nTowncrier version used for creating fragment files.\n\nFalse\n\nstring\n\n24.8.0\n\ntomli-version\n\nTomli version used for retrieving the towncrier directory.\n\nFalse\n\nstring\n\n2.2.1\n\nuse-python-cache\n\nWhether to use the Python cache for installing previously downloaded\nlibraries. If true, previously downloaded libraries are installed from the\nPython cache. If false, libraries are downloaded from the PyPI index.\n\nFalse\n\nboolean\n\nTrue\n\nuse-conventional-commits\n\nUse pull request title to determine the changelog category based on\nconventional commits. If false, the labels in the pull request are used\nto determine the changelog category.\n\nFalse\n\nboolean\n\nFalse\n\nuse-default-towncrier-config\n\nUse the default towncrier configuration in the pyproject.toml file.\n\nFalse\n\nboolean\n\nFalse\n\nuse-ansys-default-template\n\nUse the default towncrier template in the pyproject.toml file.\n\nFalse\n\nboolean\n\nTrue\n\nuse-uv\n\nWhether to use uv as the default package manager instead of pip. Default value is true.\n\nFalse\n\nboolean\n\nTrue"},{"objectID":"Home","href":"doc-actions/index.html#examples","title":"Documentation actions > Examples","text":"Examples\n\nCreate changelog fragment"},{"objectID":"Home","href":"doc-actions/index.html#doc-deploy-changelog-action","title":"Documentation actions > Doc deploy changelog action","text":"Doc deploy changelog action\n\nBuilds the CHANGELOG using towncrier fragment files for the tagged version.\nCreates a pull request into main with the CHANGELOG updates and deleted\ntowncrier fragment files.\n\nThis action will only work on Linux/macOS runners.\n\nPushing a release tag results in this action running twice:\n\nOnce to run towncrier and consolidate the changelog fragment files\ninto a single update of the CHANGELOG file.\n\nOnce to release the package after the CHANGELOG file has been updated.\n\nThere are two options when making a release for your repository:\n\nYou pushed a tag from a release branch (release-from-main is false)\n\nThis is the most common case for PyAnsys repositories. The following steps are\nperformed when release-from-main is false:\n\na) Find a release branch that has the same major and minor version of the\ntag that was pushed. For example, if your tag was “v0.1.2”, it looks for\na release branch named “release/0.1”. If the release branch cannot be found, a\ntemporary branch is used named “docs/changelog-update-vTAG_VERSION”.\n\nb) Checkout the release or temporary branch, update the CHANGELOG file\nusing towncrier, and push the updates to the respective branch.\n\nc) Checkout the main branch and create a pull request branch named\n“docs/vTAG_VERSION-changelog”. Delete the pull request branch from the remote\nif it exists, checkout the pull request branch, cherry pick the commit\ncontaining the CHANGELOG file changes from the previous step, push the\npull request branch, and create a pull request from the branch into main.\n\nd) Checkout the release or temporary branch, delete the tag locally and\non the remote, create the new tag locally, and push the tag on the remote.\nDelete the temporary branch if one was used to update the CHANGELOG file.\n\ne) Exit on error if the CHANGELOG is updated, so that the package is not released from\nthis instance of the workflow.\n\nYou pushed a tag from the main branch (release-from-main is true)\n\nThe following steps are performed when release-from-main is true:\n\na) Checkout the main branch, update the CHANGELOG file using towncrier,\nand push the updates to the main branch.\n\nb) Checkout the main branch, delete the tag locally and on the remote,\ncreate the new tag locally, and push the new tag on the remote.\n\nc) Exit on error if the CHANGELOG is updated, so that the package is not released from\nthis instance of the workflow.\n\nSource code for this action \n\n\n\n\n\n\n\n\n\n\n\nInput\n\nDescription\n\nRequired\n\nType\n\nDefault\n\ntoken\n\nUse the PYANSYS_CI_BOT_TOKEN to do a git commit & push.\nThe “contents: write” and “pull-requests: write” permissions\nare required for this action.\n\nTrue\n\nstring\n\n\n\nbot-user\n\nUse the PYANSYS_CI_BOT_USERNAME as the user for a git commit & push.\n\nTrue\n\nstring\n\n\n\nbot-email\n\nUse the PYANSYS_CI_BOT_EMAIL as the email for a git commit & push.\n\nTrue\n\nstring\n\n\n\npython-version\n\nPython version used for setting up Python.\n\nFalse\n\nstring\n\n3.11\n\ntowncrier-version\n\nTowncrier version used for updating the CHANGELOG file.\n\nFalse\n\nstring\n\n24.8.0\n\ntomli-version\n\nTomli version used for retrieving the towncrier directory.\n\nFalse\n\nstring\n\n2.2.1\n\nuse-python-cache\n\nWhether to use the Python cache for installing previously downloaded\nlibraries. If true, previously downloaded libraries are installed from the\nPython cache. If false, libraries are downloaded from the PyPI index.\n\nFalse\n\nboolean\n\nTrue\n\nrelease-from-main\n\nIf false, you pushed a tag from a release branch. This is applicable for most\nPyAnsys repositories.\nIf true, you pushed a tag from the main branch.\n\nSee the description for more information about each of the options.\n\nFalse\n\nboolean\n\nFalse\n\nuse-upper-case\n\nUse of uppercase letters in the “type” field of:\n\nThe PR created into main to add CHANGELOG changes.\n\nThe commit created in the release branch to add the new\nsection in CHANGELOG.\n\nIf false, the title is “chore: … CHANGELOG for v…”.\nIf true, the title is “CHORE: … CHANGELOG for v…”.\n\nFalse\n\nboolean\n\nFalse\n\nformat-date\n\nFormat the date in the title of the new section being added to\nthe CHANGELOG file.\n\nIf false, the date is formated YYYY-MM-DD. For example, 2024-12-31:\n\n{tag} - 2024-12-31\n\nIf true, the date is “Month Day, Year”. For example, “December 31, 2024”:\n\n{tag} - December 31, 2024\n\nFalse\n\nboolean\n\nTrue"},{"objectID":"Home","href":"doc-actions/index.html#examples","title":"Documentation actions > Examples","text":"Examples\n\nUpdate CHANGELOG for new tag"},{"objectID":"Home","href":"licenses-actions/index.html#licenses-actions","title":"Licenses actions","text":"Licenses actions\n\nLicenses actions verify that any dependency used by a Python library uses\nPyAnsys authorized open source licenses."},{"objectID":"Home","href":"licenses-actions/index.html#check-licenses-action","title":"Licenses actions > Check licenses action","text":"Check licenses action\n\nVerifies if the licenses of the dependencies installed in the current\nenvironment are compliant with PyAnsys guidelines. This action is assumed to\nbe used in its own job step. It clones the project and installs the project with\nits runtime dependencies.\n\nThis action relies on PyPI metadata to identify the license for each package.\n\nIf the metadata are flawed or not included, it may lead to\ninconclusive results. In those cases, please perform a thorough review of the\npackage you are using. Additionally, it is advised not to blindly rely on PyPI metadata.\nEven though packages may define their license as of a certain type, the\npackage could be not applying properly its licensing conditions.\n\n Accepted third party licenses\n\nAnsys\n\nApache\n\nBSD\n\nGNU\n\nHPND\n\nISC\n\nMIT\n\nMPL\n\nPSF\n\nUnlicense\n\n\n\n Ignored packages\n\naiohappyeyeballs\n\nansys-corba\n\nansys-turbogrid-api\n\ndefusedxml\n\ndistlib\n\nfilelock\n\nmatplotlib\n\npypiwin32\n\npywin32\n\nreuse\n\ntyping\n\ntyping-extensions\n\ntyping_extensions\n\nusd-core\n\nWMI\n\n\n\nProjects requiring additional licenses or packages\n\nIf a certain project requires a license or package that is not supported,\nopen an issue in the\nofficial ansys/actions repository. For additional support, please\ncontact the PyAnsys support.\n\nSource code for this action \n\n\n\n\n\n\n\n\n\n\n\nInput\n\nDescription\n\nRequired\n\nType\n\nDefault\n\npython-version\n\nPython version used for installing and executing licence check.\n\nFalse\n\nstring\n\n3.11\n\nuse-python-cache\n\nWhether to use the Python cache for installing previously downloaded\nlibraries. If true, previously downloaded libraries are installed from the\nPython cache. If false, libraries are downloaded from the PyPI index.\n\nFalse\n\nboolean\n\nTrue\n\ntarget\n\nOptional target used during the building process.\n\nFalse\n\nstring\n\n\n\nwhitelist-license-check\n\nOptional list of packages to ignore during the license check. Separated by a comma.\n\nFalse\n\nstring\n\n\n\nskip-install\n\nWhether to skip the installation of the project. The default is false.\nIf used in combination with other actions, it might not be needed to install\nthe project.\n\nFalse\n\nboolean\n\nFalse\n\ncheckout\n\nWhether to clone the repository in the CI/CD machine. Default value is\ntrue.\n\nFalse\n\nboolean\n\nTrue\n\nuse-uv\n\nWhether to use uv as the default package manager instead of pip. Default value is true.\n\nFalse\n\nboolean\n\nTrue"},{"objectID":"Home","href":"licenses-actions/index.html#examples","title":"Licenses actions > Examples","text":"Examples\n\nCheck library dependencies ship with valid licenses"},{"objectID":"Home","href":"build-actions/index.html#build-actions","title":"Build actions","text":"Build actions\n\nThe build actions allow for building artifacts for a Python library. These\nartifacts include both source distribution files and wheels."},{"objectID":"Home","href":"build-actions/index.html#build-library-action","title":"Build actions > Build library action","text":"Build library action\n\nVerifies if a Python library builds properly. As a result of a successful\nbuilding process, wheel and source distribution artifacts are generated. This\naction is expected to be used as an independent job.\n\nUse this action instead of the build-ci-wheels\nif your library is a pure Python project with no source code to be compiled.\n\nSource code for this action \n\n\n\n\n\n\n\n\n\n\n\nInput\n\nDescription\n\nRequired\n\nType\n\nDefault\n\nlibrary-name\n\nName of the Python library. This is the name used when uploading the wheel\nand source distribution as artifacts. The name should be the same one used\nin the PyPI index.\n\nTrue\n\nstring\n\n\n\npython-version\n\nPython version used for installing and execution of the build process.\n\nFalse\n\nstring\n\n3.11\n\nuse-python-cache\n\nWhether to use the Python cache for installing previously downloaded\nlibraries. If true, previously downloaded libraries are installed from the\nPython cache. If false, libraries are downloaded from the PyPI index.\n\nFalse\n\nboolean\n\nTrue\n\ncheckout\n\nWhether to do a checkout step or not. If true, the checkout step is performed.\nIf false, the checkout is skipped allowing the workspace from a prior step to\nbe used unaltered. By default it is set to true.\n\nFalse\n\nboolean\n\nTrue\n\nvalidate-build\n\nWhether to validate the build process. If true, the build process is\nvalidated. If false, the build process is not validated.\n\nFalse\n\nboolean\n\nTrue\n\nworking-directory\n\nDirectory to execute this action. Useful for repositories containing\nvarious Python libraries.\n\nFalse\n\nstring\n\n.\n\nattest-provenance\n\nWhether to generate build provenance attestations for distribution\nartifacts.\n\nAdding provenance attestations requires write permissions for id-token\nand attestation. Otherwise, this action will fail.\n\nFalse\n\nboolean\n\nFalse\n\nuse-uv\n\nWhether to use uv as the default package manager instead of pip. Default value is true.\n\nFalse\n\nboolean\n\nTrue\n\ncheckout-fetch-depth\n\nSet fetch-depth option for actions/checkout. Default value is 1.\n\nFalse\n\nstring\n\n1\n\ncheckout-fetch-tags\n\nSet fetch-tags option for actions/checkout. Default value is false.\n\nFalse\n\nboolean\n\nFalse"},{"objectID":"Home","href":"build-actions/index.html#examples","title":"Build actions > Examples","text":"Examples\n\nBuild library basic example"},{"objectID":"Home","href":"build-actions/index.html#build-wheelhouse-action","title":"Build actions > Build wheelhouse action","text":"Build wheelhouse action\n\nGenerates compressed artifacts for the wheelhouse of a Python library. The\nwheelhouse contains all the necessary dependencies to install the project.\nThis allows for local installations and avoids the need to connect to the\nonline PyPI index.\n\nSince version 4.1, the input parameter library-namespace is no longer\nrequired.\n\nSource code for this action \n\n\n\n\n\n\n\n\n\n\n\nInput\n\nDescription\n\nRequired\n\nType\n\nDefault\n\nlibrary-name\n\nName of the Python library. This is the name used when uploading the wheel\nand source distribution as artifacts. The name should be the same one used\nin the PyPI index.\n\nTrue\n\nstring\n\n\n\noperating-system\n\nName of the operating system where the library is installed.\n\nTrue\n\nstring\n\n\n\npython-version\n\nPython version used for installing and execution of the build wheel process.\n\nTrue\n\nstring\n\n\n\ntarget\n\nOptional target used during the building process.\n\nFalse\n\nstring\n\n\n\nuse-python-cache\n\nWhether to use the Python cache for installing previously downloaded\nlibraries. If true, previously downloaded libraries are installed from the\nPython cache. If false, libraries are downloaded from the PyPI index.\n\nFalse\n\nboolean\n\nTrue\n\ncheck-licenses\n\nWhether to check the library’s dependencies license or not. If true. the licenses\nare checked. If false, no license check is performed. By default it is set to\ntrue.\n\nFalse\n\nboolean\n\nTrue\n\nwhitelist-license-check\n\nOptional list of packages to ignore during the license check. Separated by a comma.\nOnly used when check-licenses is set to true.\n\nFalse\n\nstring\n\n\n\ncheckout\n\nWhether to do a checkout step or not. If true, the checkout step is performed.\nIf false, the checkout is skipped allowing the workspace from a prior step to\nbe used unaltered. By default it is set to true.\n\nFalse\n\nboolean\n\nTrue\n\nworking-directory\n\nDirectory to execute this action. Useful for repositories containing\nvarious Python libraries.\n\nFalse\n\nstring\n\n.\n\nattest-provenance\n\nWhether to generate build provenance attestations for wheelhouse\nartifacts.\n\nAdding provenance attestations requires write permissions for id-token\nand attestation. Otherwise, this action will fail.\n\nFalse\n\nboolean\n\nFalse\n\ninstall-build-and-wheel\n\nWhether to install build and wheel libraries before building the wheelhouse.\n\nFalse\n\nboolean\n\nFalse\n\nuse-uv\n\nWhether to use uv as the default package manager instead of pip. Default value is true.\n\nFalse\n\nboolean\n\nTrue"},{"objectID":"Home","href":"build-actions/index.html#examples","title":"Build actions > Examples","text":"Examples\n\nBuild wheelhouse for latest Python versions"},{"objectID":"Home","href":"build-actions/index.html#build-ci-wheels-action","title":"Build actions > Build CI wheels action","text":"Build CI wheels action\n\nBuild wheels for a Python library containing compiled source code. This action\nis expected to be used within a matrix job. Its goal is to generate wheel\nfiles for every combination of operating system, build system, and Python\nversion. The action uses the cibuildwheel behind the scenes.\n\nThis actions should only be used by libraries including source code that\nneeds to be compiled.\n\nSource code for this action \n\n\n\n\n\n\n\n\n\n\n\nInput\n\nDescription\n\nRequired\n\nType\n\nDefault\n\npython-version\n\nPython version used for building the wheels.\n\nTrue\n\nstring\n\n\n\nlibrary-name\n\nName of the Python library. This is the name used when uploading the wheel\nand source distribution as artifacts. The name should be the same one used\nin the PyPI index.\n\nTrue\n\nstring\n\n\n\noperating-system\n\nName of the operating system where the library is installed.\n\nTrue\n\nstring\n\n\n\ncibw-build\n\nDesired build wheel CPython version.\n\nFalse\n\nstring\n\ncp310-*\n\ncibw-archs\n\nDesired build architecture.\n\nFalse\n\nstring\n\nauto\n\nrequires-pypy\n\nWhether to generate wheels for wheel files for PyPy in addition to the wheel files for CPython.\nDefault value is false.\n\nFalse\n\nboolean\n\nFalse"},{"objectID":"Home","href":"build-actions/index.html#examples","title":"Build actions > Examples","text":"Examples\n\nBuild a C-extension library"},{"objectID":"Home","href":"migrations/release-pypi-trusted-publisher.html#release-to-pypi-as-a-trusted-publishers","title":"Release to PyPI as a trusted publishers","text":"Release to PyPI as a trusted publishers\n\nThe trusted publisher feature allows projects to release packages to PyPI\nwithout the need for a PyPI API token. This feature is available for projects\ndeploying from GitHub Actions.\n\nDue to its security implications, the trusted publisher feature can not be used\nwith composite actions. Therefore, users of Ansys Actions must declare their\nown release job.\n\nContact the PyAnsys Core Team to request\nauthorization to release as a trusted publisher.\n\nAdapt your release job in as follows:\n\n"},{"objectID":"Home","href":"vulnerability-actions/index.html#vulnerability-actions","title":"Vulnerability actions","text":"Vulnerability actions\n\nVulnerability actions verify that any safety advisories detected in a Python\nlibrary are properly identified and reported, both on the library itself\nand third-party libraries (that is, dependencies).\n\n"},{"objectID":"Home","href":"vulnerability-actions/index.html#check-vulnerabilities-action","title":"Vulnerability actions > Check vulnerabilities action","text":"Check vulnerabilities action\n\nUsers can try out the ansys/check-vulnerabilities action on their local repository\nby doing the following:\n\nDownload the check_vulnerabilities.py script and the requirements.txt file from\nthe ansys/check-vulnerabilities action folder.\n\nMove the downloaded files to the root of the repository.\n\nCreate a virtual environment by running python -m venv .venv.\n\nActivate the virtual environment.\n\nInstall the required dependencies by running pip install -r requirements.txt.\n\nInstall your repository with the command pip install -e ..\n\nDefine the following environment variables:\n\nDEPENDENCY_CHECK_TOKEN: A GitHub token with the necessary permissions to access security advisories on the repository you are interested in.\n\nDEPENDENCY_CHECK_PACKAGE_NAME: The Python package name of your repository. This is the name of the package that you would use in a pip install command.\n\nDEPENDENCY_CHECK_REPOSITORY: The full name of the repository you are interested in. This is the name of the repository in the format <owner>/<repository>.\n\nRun the script by running python check_vulnerabilities.py --run-local.\n\nThe ansys/check-vulnerabilities action needs to be performed on a public repository.\nIf the repository is private, the action will fail due to denied access.\n\nDocumentation on how to address common vulnerabilities can be found in the\nPyAnsys developer’s guide.\n\nAction actively checking for library and third party vulnerabilities by\nmeans of the bandit and\nsafety Python packages. These packages\nallow you to identify security issues and vulnerabilities inside your code.\n\nThis action has two running modes:\n\nDefault mode: when running on default mode, if a security advisory\nis detected, this action will publish both the security advisory and\nan issue so that end users are informed about existing issues.\n\nDevelopment mode: repository maintainers are asked to activate\nthe dev-mode option, which will activate both dry-run and\nexit-with-error-on-new-advisory (independently of other configurations\nprovided). This way developers are informed of potential vulnerabilities\nbeing introduced by them on their feature branch (while no new advisories\nare created).\n\nThe following list of safety vulnerabilities are accepted:\n\n Accepted safety vulnerabilities\n\nVulnerability 52495\n\nVulnerability 62044\n\nVulnerability 67599\n\nVulnerability 72236\n\nVulnerability 76752\n\nSource code for this action \n\n\n\n\n\n\n\n\n\n\n\nInput\n\nDescription\n\nRequired\n\nType\n\nDefault\n\ntoken\n\nToken with write permissions on the repository.\n\nTrue\n\nstring\n\n\n\npython-package-name\n\nPython package name being evaluate as it is shown on PyPI.\n\nTrue\n\nstring\n\n\n\nextra-targets\n\nExtra targets to be evaluated by safety. By default, it is set to an\nempty string. This gets substituted to the library install command as\nfollows (inside <INPUT>):\n\nFalse\n\nstring\n\n\n\nbandit-configfile\n\nOptional config file to use for selecting plugins, overriding defaults,\nand customizing checks performed by bandit.\n\nFalse\n\nstring\n\n\n\nsource-directory\n\nThe source folder of the repository to be evaluated by bandit.\nBy default, it is set to src\n\nFalse\n\nstring\n\nsrc\n\nrepo-full-name\n\nThe repository to be evaluated. By default, it is extracted from the\nGitHub context.\n\nFalse\n\nstring\n\n\n\ndev-mode\n\nWhether to run or not this action in development mode. It will activate\nby default the dry-run and exit-with-error-on-new-advisory flags.\n\nFalse\n\nboolean\n\nFalse\n\ndry-run\n\nWhether to run or not this action in dry run mode. Dry run mode executes\nall the action steps and prints on screen the results (if any).\n\nFalse\n\nboolean\n\nFalse\n\nexit-with-error-on-new-advisory\n\nWhether to exit the action on error if a new advisory is detected.\nThis mode is not recommended on main branches since it will cause the\nworkflow to fail. To be used on feature branches in combination with\ndry-run mode.\n\nFalse\n\nboolean\n\nFalse\n\nhide-log\n\nWhether to hide the output log of the GitHub action.\nBy default, the log is available to anyone for public repositories.\nThis would disclose any potential vulnerabilities to anyone.\n\nFalse\n\nboolean\n\nTrue\n\nupload-reports\n\nWhether to upload the artifacts containing the vulnerability report.\nBy default, the report artifacts is not uploaded.\nThis option should not be enabled unless strictly necessary.\n\nFalse\n\nboolean\n\nFalse\n\ncreate-issues\n\nWhether to create issues for new advisories detected.\nBy default, issues are NOT created for new advisories detected.\n\nFalse\n\nboolean\n\nFalse\n\ncheckout\n\nWhether to clone the repository in the CI/CD machine. Default value is\ntrue.\n\nFalse\n\nboolean\n\nTrue\n\npython-version\n\nDesired Python version.\n\nFalse\n\nstring\n\n3.11\n\nuse-uv\n\nWhether to use uv as the default package manager instead of pip. Default value is true.\n\nFalse\n\nboolean\n\nTrue"},{"objectID":"Home","href":"vulnerability-actions/index.html#examples","title":"Vulnerability actions > Examples","text":"Examples\n\nCheck library vulnerabilities"},{"objectID":"Home","href":"vulnerability-actions/index.html#check-actions-security-action","title":"Vulnerability actions > Check actions security action","text":"Check actions security action\n\nzizmor is configurable with a zizmor.yml file. This action uses this behind the scenes for the trust-ansys-actions\noption. If a custom zizmor.yml exists in the repository root, it takes precedence and the option is ignored. Refer to the\nzizmor configuration settings for details about setting up custom configuration.\n\nTo audit locally for faster feedback when addressing vulnerabilities:\n\nCreate a virtual environment with python -m venv .venv and activate it.\n\nInstall zizmor: pip install zizmor==1.12.1.\n\nIf the repository doesn’t use a custom zizmor.yml file, download the zizmor.yml file from the\nansys/action check-actions-security folder\nand move it to the root of the repository.\n\nIf trust-ansys-actions has been set to false in the workflow (i.e., you pin ansys/actions with a SHA instead of a tag), you must edit the\ndefault policies in zizmor.yml as follows:\n\nBefore\n\n\n\nAfter\n\n\n\nRun zizmor --persona=pedantic . for a minimal audit (action’s default) or zizmor --persona=auditor . for a stricter audit.\n\nTo generate a summary table locally:\n\nDownload the zizmor-summary.py file from the\nansys/action python utilities folder and\nmove it to the root of the repository.\n\nSet one of the following environment variables:\n\nHIGH_AUDIT_LEVEL=--persona=pedantic for minimal audit.\n\nSTRICT_AUDIT_LEVEL=--persona=auditor for stricter audit.\n\nRun the script: python zizmor-summary.py.\n\nFor more details on addressing workflow vulnerabilities, see\nthe relevant PyAnsys developer’s guide section.\n\nThis action helps audit GitHub workflows for vulnerabilities. It finds many common\nsecurity issues in typical GitHub Actions CI/CD setups using\nzizmor. Consult zizmor audit rules\nfor more information about detected issues and how to remediate them.\n\nSource code for this action \n\n\n\n\n\n\n\n\n\n\n\nInput\n\nDescription\n\nRequired\n\nType\n\nDefault\n\ntoken\n\nUse the GH_TOKEN to allow online audits by zizmor.\n\nFalse\n\nstring\n\n\n\ngenerate-summary\n\nWhether to output a nicely formatted summary table showing the number\nof security issues per workflow file. Default value is true.\n\nFalse\n\nboolean\n\nTrue\n\nauditing-level\n\nEquivalent to ‘persona’ zizmor option, controls zizmor’s auditing sensitivity.\nPossible values include ‘normal’, ‘high’, and ‘strict’, which map to ‘regular’, ‘pedantic’,\nand ‘auditor’ persona options. Default value is high.\n\nFalse\n\nstring\n\nhigh\n\ntrust-ansys-actions\n\nWhether to trust the ansys/actions. Setting this option to true will allow pinning\nansys/actions with tags. This option is ignored if a custom zizmor.yml file is\ndetected in the repository. Default value is true.\n\nFalse\n\nboolean\n\nTrue\n\ncheckout\n\nWhether to do a checkout step or not. If true, the checkout step is performed.\nIf false, the checkout is skipped allowing the workspace from a prior step to\nbe used unaltered. By default it is set to true.\n\nFalse\n\nboolean\n\nTrue"},{"objectID":"Home","href":"vulnerability-actions/index.html#examples","title":"Vulnerability actions > Examples","text":"Examples\n\nCheck actions security"},{"objectID":"Home","href":"vulnerability-actions/index.html#check-environment-approval","title":"Vulnerability actions > Check environment approval","text":"Check environment approval\n\nThis action is used to determine whether a manual approval step is needed in the\nworkflow. It evaluates the pull request workflow and determines the environment\nname to be used in the workflow. The environment name should then be used in a\nworkflow job to trigger a manual approval step if needed.\n\nEvaluates the pull request workflow and determines the environment name to be\nused in the workflow. The environment name should then be used in a workflow\nto trigger a manual approval step if needed.\n\nThe environment name is set to the manual-check-environment input if\nthe workflow is triggered by dependabot[bot] or if the pull request was\ncreated by dependabot[bot] and pyansys-ci-bot is the actor triggering\nthe workflow. Otherwise, it is set to skip-manual-check-environment input.\n\nThe manual check is required to mitigate supply chain attacks, where a malicious\ndependency update could execute arbitrary code in our build environment.\nDependabot PRs must be reviewed carefully and approved manually before\nrunning the CI.\n\nThis action relies on the\nGithub context\nto determine which environment to use. The manual approval can be added by\nreferencing the\nGithub environment\nin a workflow job and configuring the environment with deployment protection\nrules requiring a manual approval. For more information, see how to add\nrequired reviewers.\n\nSource code for this action \n\n\n\n\n\n\n\n\n\n\n\nInput\n\nDescription\n\nRequired\n\nType\n\nDefault\n\nmanual-check-environment\n\nName of the environment used to trigger manual checking.\n\nFalse\n\nstring\n\ndependabot\n\nskip-manual-check-environment\n\nName of the environment used to skip the manual checking. This is useful\nwhen the workflow is triggered by a different actor than dependabot.\n\nFalse\n\nstring\n\n"},{"objectID":"Home","href":"vulnerability-actions/index.html#examples","title":"Vulnerability actions > Examples","text":"Examples\n\nCheck environment approval"},{"objectID":"Home","href":"migrations/index.html#migration-guide","title":"Migration guide","text":"Migration guide\n\nThis guide provides information on new features, breaking changes, how to migrate\nfrom one version of the actions to another, and other upstream dependencies that\nhave been updated."},{"objectID":"Home","href":"migrations/index.html#version-v102","title":"Migration guide > Version v10.2","text":"Version v10.2\n\nNew Features:\n\nBuild-Library Changes: The build-library action now includes two new inputs:\n\ncheckout-fetch-depth (default: 1): Allows configuring the fetch depth when checking out the repository.\nSetting this to 0 fetches the entire history, which may be necessary for certain build processes that\nrely on full commit history.\n\ncheckout-fetch-tags (default: false): When set to true, this input enables fetching all tags from the repository.\nThis is useful for build processes that depend on tag information.\n\nPR Documentation Deployment: The doc-deploy-pr action is now easier to use. Starting with\nversion v10.2, you no longer need to include the closed pull request event in your workflows because\ndeployed documentation is cleaned up asynchronously. For more details, see docs-deploy-pr-setup."},{"objectID":"Home","href":"migrations/index.html#version-v101","title":"Migration guide > Version v10.1","text":"Version v10.1\n\nNew Features:\n\nansys/actions/doc-deploy-stable action now supports pre-releases. The identifiers must be one of a|b|rc for alpha, beta, and\nrelease candidates respectively. Furthermore, only patch pre-release are supported, meaning the PEP 440 <https://peps.python.org/pep-0440/>\ncompliant version identifiers are limited to those that comply with the following scheme:\n\nIn the same pre-release cycle, documentation is retained for a maximum of three pre-release versions and removed following a normal release.\n\nAdded a checkout option (default: true) to build-library, check-actions-security, and code-style actions. Setting checkout\nto false allows reuse of the workspace from a prior step without modification.\n\nIntroduced an upload-artifact-name-prefix option (default: documentation) in the doc-build action, enabling customization of uploaded\ndocumentation artifact names. This also allows distinct documentation artifacts to be uploaded for separate documentation build jobs within the\nsame workflow.\n\nMigration Steps:\n\nFor Poetry-based projects, ensure that you provide the correct values for optional-dependencies-name (default: doc) and group-dependencies-name.\n\noptional-dependencies-name: Refers to the extras defined in the pyproject.toml file.\n\ngroup-dependencies-name: Refers to the dependency groups defined in the same file.\n\nIf your documentation dependencies are defined as extras, changes to your workflow are likely not needed since the default value for optional-dependencies-name\nwill target the doc extra. However, using dependency groups (as is the case with most PyAnsys libraries) requires the following update to your workflow:\n\nBefore\n\n\n\nAfter\n\n"},{"objectID":"Home","href":"migrations/index.html#version-v10","title":"Migration guide > Version v10","text":"Version v10\n\nNew Features:\n\nWorkflow Security Audits: Introduced ansys/action/check-actions-security to audit workflow files\nfor security and vulnerability issues. Provides summary and detailed reports using the\nzizmor static analysis tool. See zizmor audit rules\nfor information about detected issues and their remediation.\n\nPR Documentation Deployment: Added ansys/action/doc-deploy-pr to deploy HTML documentation\nfor pull requests at https://<cname>/pull/<pr-number>/. Documentation is automatically removed\nwhen the pull request is closed. Refer to docs-deploy-pr-setup for setup details.\n\nFaster Package Installation: Added a use-uv option (default: true) to build-library,\nbuild-wheelhouse, check-licenses, check-vulnerabilities, code-style, doc-build,\ndoc-changelog, doc-deply-changelog, hk-package-clean-except, hk-package-clean-untagged,\nrelease-github, and tests-pytest actions. This leverages uv for faster package installation,\nimproving workflow speed for projects with multiple dependencies.\n\nAbout pre-releases and extra indices\n\nThe installation of pre-releases by uv is only supported if these are\nlisted in the pyproject.toml file. If you wish to install\npre-releases at all levels, you must set the UV_PRERELEASE=allow\nenvironment variable.\n\nRegarding extra indices, uv supports the UV_EXTRA_INDEX_URL for\nspecifying extra indices. This is the equivalent to the\nPIP_EXTRA_INDEX_URL environment variable.\n\nDependency Groups Support: doc-build and tests-pytest actions now support\nPEP 735 dependency groups via the group-dependencies-name\ninput. Extras remain supported through the optional-dependencies-name input.\n\nSBOM Generation: build-wheelhouse action now generates a Software Bill of Materials (SBOM) in\nSPDX format and uploads it as an artifact. This SBOM is generated using Syft.\nNote that the SBOM artifacts are now included in the Github release.\n\nBreaking Changes:\n\nPython Version Support: Dropped support for Python versions below 3.9.\n\nJSON Builder Removal: ansys/actions/doc-build no longer supports the JSON builder\nfor documentation rendering.\n\nDependency Groups Parsing: Replaced the toml library with tomli in doc-style,\ndoc-changelog, and release-github actions due to improved support for pyproject.toml\nfiles with nested dependency groups. The tomli-version input replaces the former\ntoml-version input.\n\nBuild-Wheelhouse Changes:  the build-wheelhouse action now installs packages in a virtual environment\ninstead of at the system level. If you have subsequent workflow steps (e.g., running smoke tests) that depend on\nthese packages, activate the virtual environment using the action’s activate-venv output. For example:"},{"objectID":"Home","href":"migrations/index.html#version-v90","title":"Migration guide > Version v9.0","text":"Version v9.0\n\nBreaking changes:\n\nUse ansys/actions/check-licenses actions with Python version 3.10 or higher.\n\nTo use check-licenses: true with the ansys/actions/build-wheelhouse action, use Python version 3.10 or higher.\n\nUpdate your workflow to not use use-trusted-publisher: true with our pypi release actions.\n\nUsing the trusted publisher approach in ansys/release-pypi-public and ansys/release-pypi-private actions is\nnot possible anymore. The reason for that is related to the action\npypa/gh-action-pypi-publish which allows to use the trusted\npublisher. Indeed, it is no longer possible to use the action in a composite action for versions after v1.12.0, see\npypa/gh-action-pypi-publish@v1.12.0.\nHowever, the latest versions of this action is required to upload\nPEP 639 licensing metadata\nto PyPI. This allows to avoid adding upper bounds on build system like setuptools<=67.0.0, wheel<0.46.0 or\nflit_core>=3.2,<3.11.\n\nMigration Steps:\n\nUpdate input python-version to 3.10 or higher in the ansys/actions/check-licenses action or in\nthe ansys/actions/build-wheelhouse action if you are using the check-licenses input.\n\nFor example:\n\nWhen using trusted publisher to publish to PyPI, define you own release job instead of using the\nansys/actions/release-pypi-* actions. See release_pypi_trusted_publisher for more details."},{"objectID":"Home","href":"migrations/index.html#version-v82","title":"Migration guide > Version v8.2","text":"Version v8.2\n\nNew Features:\n\nAdded a new action named ansys/actions/hk-automerge-prs. This action allows maintainers to auto-approve and merge\ndependabot PRs and pre-commit.ci PRs. It is recommended to add the action at the end of the workflow, once all the\nstages have finished successfully. That way, in case a repository has failing stages, it is not run. This action will run in case\nthe PR has been created by dependabot or pre-commit.ci. You can see an example of its implementation\nhere\nand the associated PR/commit.\n\nAdded a new input parameter use-ansys-default-template to the ansys/actions/doc-changelog action.\nThis input allows users to utilize the default template provided by the ansys/actions repository.\nFor migration instructions, see the migration steps below.\n\nThe default template is only available for the ansys/actions/doc-changelog action and is in the reStructuredText (rst) format.\n\nAdded a new input parameter fail-level to the ansys/actions/doc-style action.\nThis input allows users to select the report level used to control check results.\nDefault value is \"error\" but it can be changed to \"any\", \"info\", \"warning\", or \"error\".\n\nThe release-github/action.yml action has been improved with the ability to extend a Github release note with\ninstructions on how to verify the release’s artifacts attestations with\nGithub’s command-line tool.\n\nAdded a new input attest-provenance to the ansys/actions/build-library and ansys/actions/build-wheelhouse\nactions. Note that adding provenance attestations requires write permissions for id-token and attestation.\nFor example:\n\nAdded two inputs to the release-github/action.yml action. The first input parameter\nadd-artifact-attestation-notes allows users to add artifact attestation notes to the Github release notes.\nThe second input parameter generate_release_notes allows users to deactivate the notes automatically generated\nby default.\n\nAdded a new input parameter randomize to the ansys/actions/tests-pytest action to randomize the order of the tests.\n\nMigration Steps:\n\nThe default documentation includes tabs and tab items, providing a clean changelog reStructuredText (rst) file. To use this feature,\nadd sphinx-design as a dependency in your pyproject.toml file and include sphinx_design as an extension in your conf.py file.\n\nIn your conf.py file, add the following line:\n\nAfter updating the actions to v9, a comment is made in the PR with the changelog file, suggesting to add sphinx-design as a dependency.\nYou can ignore that comment if you have already added the dependency.\n\nAfter merging the PR, the changelog file updates with the new template, and the new release changelog is created using the new template."},{"objectID":"Home","href":"migrations/index.html#version-v8","title":"Migration guide > Version v8","text":"Version v8\n\nBreaking changes:\n\nUse secrets for commit and push credentials within ansys/actions/doc-changelog,\nansys/actions/doc-deploy-changelog, ansys/actions/doc-deploy-dev, and\nansys/actions/doc-deploy-stable.\n\nThe token input is required in the ansys/actions/release-github action.\n\nDeprecated features:\n\nThe ansys/actions/doc-deploy-index action has been deprecated and will be\nremoved in the next release. With the deprecation of pymeilisearch and\nthe adoption of a static search index via the ansys-sphinx-theme, the\nansys/actions/doc-deploy-index action is no longer necessary.\n\nThe ansys/actions/commit-style action has been renamed to\nansys/actions/check-pr-title.\n\nThe ansys/actions/branch-name-style actions has been removed in favor of\nGitHub rulesets.\n\nMigration steps:\n\nAdd the following required inputs to ansys/actions/doc-changelog, ansys/actions/doc-deploy-changelog,\nansys/actions/doc-deploy-dev, and ansys/actions/doc-deploy-stable:\n\nAdd the permissions and token to the ansys/actions/release-github action as follows:"},{"objectID":"Home","href":"migrations/index.html#version-v7","title":"Migration guide > Version v7","text":"Version v7\n\nNew features:\n\nAdded an optional input to the ansys/actions/build-library action to disable library build\nvalidation on demand using the validate-build: false argument. This is useful when you want to\nskip the library build validation step in the action.\n\nIncorporated the usage of Trusted Publisher in the\nansys/actions/release-pypi-* actions. This is useful when you want to sign the package before\nuploading it to PyPI.\n\nMigration steps:\n\nTo set up your repository to use the ansys/actions/release-pypi-* action with the Trusted Publisher approach,\nsee the release_pypi_trusted_publisher."},{"objectID":"Home","href":"migrations/index.html#version-v6","title":"Migration guide > Version v6","text":"Version v6\n\nNew features:\n\nAdded the ansys/actions/check-vulnerabilities action to check for third-party and first-party vulnerabilities.\nThis is useful when you want to hide the vulnerabilities from the logs, but still want to fail the action if vulnerabilities are found.\n\nAvoid creating issues by default if vulnerabilities are found in the ansys/actions/check-vulnerabilities action.\n\nCreate a changelog fragment file for each pull request using towncrier in the ansys/actions/doc-changelog action.\n\nGenerate a new section in CHANGELOG.md if fragment files exist using towncrier in the ansys/actions/doc-deploy-changelog action.\nBy default, it updates the CHANGELOG in the release branch and creates a pull request into the main branch with the updated CHANGELOG and\ndeleted fragment files.\n\nSEO improvements. These are implemented inside the doc-deploy-dev\nand the doc-deploy-stable.\nUsers are not required to apply any changes to their conf.py or\n.github/workflows/*.yml files. Noticable changes include:\n\nNo more redirect from landing page to version/stable/index.html\n\nGeneration of robots.txt file for avoiding indexing old documentation versions\n\nGeneration of sitemap.xml file for quicker indexing of version/stable/ pages\n\nInclusion of canonical link tags in all HTML files for SEO purposes\n\nExtend ansys/actions/doc-build to be able to run in Windows runners.\nTo buid the documentation in a Windows runner, we install Chocolatey and Miktex.\n\nAllow ansys/actions/commit-style to work with upper case in the type field of a commit.\nExpected types are upper cases of  conventional commit types.\n\nBreaking changes:\n\nUpgrade default vale version from 2.29.6 to 3.4.1 in ansys/actions/doc-style action.\n\nVale configuration file .vale.ini and Vocab/ANSYS has to be changed.\n\nMigration steps:\n\nTo set up your repository to use the ansys/actions/doc-changelog action, see the docs_changelog_action_setup.\n\nTo set up your repository to use the ansys/actions/doc-deploy-changelog action, see the docs_deploy_changelog_action_setup.\n\nTo set up your repository to use the ansys/actions/doc-style action, see the docs_style_vale_update."},{"objectID":"Home","href":"migrations/index.html#version-v5","title":"Migration guide > Version v5","text":"Version v5\n\nNew features:\n\nAdded ansys/action/check-vulnerabilities to verify third party and first party vulnerabilities.\nThis action uses bandit and safety to detect vulnerabilities in the code and dependencies, respectively.\n\nAdded ansys/actions/docker-style to detect Dockerfile style issues using hadolint.\n\nAllow vale version input in ansys/actions/doc-style action. By default, 2.29.6 is used.\n\nAllow using the twine --skip-existing flag in the ansys/actions/release-pypi-* actions.\n\nAllow using the ansys/actions/doc-build action to build documentation using a dedicated requirements file (and\nconsequently, no need to have a Python project to use it).\n\nAllow for independent documentation releases in case of patch release when using ansys/actions/doc-deploy-stable action.\nThis will create independent documentation versions for patch releases.\n\nBreaking changes:\n\nUpgrade actions/upload-artifact and actions/download-artifact to version v4.\n\nUpgrade actions/setup-python to version v5.\n\nMigration steps:\n\nSince artifacts are uploaded/downloaded using the new actions/*-artifact, artifact names cannot\nbe duplicated inside the workflow. Also, versions v3 and v4 are incompatible with each other. If you are using\nversion v3 independently inside your workflow, you need to upgrade to version v4.\n\nThe upgrade to actions/setup-python version v5 is not mandatory, but it is recommended to use the latest version.\nHowever, it has been seen that in Windows self-hosted runners, if a certain Python version is not already stored in the\ncache, the action fails. This is a known issue and the workaround is to use the previous version of the action.\n\nDependency changes:\n\nUpgrade actions/checkout to version v4.\n\nUpgrade pypa/cibuildwheel to version v2.16.2.\n\nUpgrade peter-evans/create-or-update-comment to version v4.\n\nUpgrade vimtor/action-zip to version v1.2."},{"objectID":"Home","href":"migrations/index.html#version-v4","title":"Migration guide > Version v4","text":"Version v4\n\nBreaking changes:\n\nMulti-version documentation deployment using ansys/actions/doc-deploy-stable and ansys/actions/doc-deploy-dev.\n\nMigration steps:\n\nVisit Enable multi-version documentation\nfor a detailed migration guide.\n\n"},{"objectID":"Release notes","href":"changelog.html#release-notes","title":"Release notes","text":"Release notes\n\nThis document contains the release notes for the Ansys Actions project."},{"objectID":"Release notes","href":"changelog.html#1014---october-01-2025","title":"Release notes > 10.1.4 - October 01, 2025","text":"10.1.4 - October 01, 2025\n\nDependencies\n\n\n\n\n\nBump actions/setup-python from 5.6.0 to 6.0.0 in /_setup-python in the github-actions group across 1 directory\n\n#1000\n\nBump jbergstroem/hadolint-gh-action from 1.12.2 to 1.13.0 in /docker-style in the style-related-actions group across 1 directory\n\n#1001\n\nBump softprops/action-gh-release from 2.3.2 to 2.3.3 in /release-github in the release-related-actions group across 1 directory\n\n#1002\n\nDocumentation\n\n\n\n\n\nImprove actions security documentation\n\n#1018\n\nFixed\n\n\n\n\n\nAllow script to run on Windows\n\n#1014\n\nAdd always() condition to the last step of check-actions-security\n\n#1020\n\nDoc build on windows for poetry projects\n\n#1021"},{"objectID":"Release notes","href":"changelog.html#1013---september-29-2025","title":"Release notes > 10.1.3 - September 29, 2025","text":"10.1.3 - September 29, 2025\n\nFixed\n\n\n\n\n\nGitHub command-line tool command in ansys/release-github\n\n#1012"},{"objectID":"Release notes","href":"changelog.html#1012---september-23-2025","title":"Release notes > 10.1.2 - September 23, 2025","text":"10.1.2 - September 23, 2025\n\nDocumentation\n\n\n\n\n\nUpdate check-actions-security action documentation\n\n#1007"},{"objectID":"Release notes","href":"changelog.html#1011---september-17-2025","title":"Release notes > 10.1.1 - September 17, 2025","text":"10.1.1 - September 17, 2025\n\nDocumentation\n\n\n\n\n\nImprove migration guide\n\n#1003"},{"objectID":"Release notes","href":"changelog.html#1010---september-11-2025","title":"Release notes > 10.1.0 - September 11, 2025","text":"10.1.0 - September 11, 2025\n\nAdded\n\n\n\n\n\nImprove check actions security\n\n#968\n\nDependencies\n\n\n\n\n\nBump the github-actions group across 15 directories with 2 updates\n\n#965\n\nBump the github-actions group across 2 directories with 1 update\n\n#993\n\nBump amannn/action-semantic-pull-request from 5.5.3 to 6.1.1 in /check-pr-title in the style-related-actions group across 1 directory\n\n#994\n\nBump the build-related-actions group across 2 directories with 1 update\n\n#995\n\nDocumentation\n\n\n\n\n\nUpdate zizmor documentation\n\n#992\n\nFixed\n\n\n\n\n\nPin twine to <6.2.0 and bump pypa action\n\n#983\n\nPin twine correctly\n\n#988\n\nWrong identifier in python block\n\n#996\n\nMaintenance\n\n\n\n\n\nRemove transient dependency pin\n\n#979\n\nTest\n\n\n\n\n\nAdd more pre-release tests\n\n#986"},{"objectID":"Release notes","href":"changelog.html#1010a0---september-01-2025","title":"Release notes > 10.1.0a0 - September 01, 2025","text":"10.1.0a0 - September 01, 2025\n\nAdded\n\n\n\n\n\ncheck actions security action\n\n#725\n\nuv as default package manager\n\n#754\n\ncheck environment approval\n\n#776\n\nadd compatibility with dependency groups\n\n#794\n\npr documentation deployment and cleanup\n\n#799\n\nallow to specify working-directory\n\n#820\n\noption for maximum number of pr doc deployment\n\n#823\n\nensure matching and metadata version\n\n#833\n\nadd SBOM to wheelhouse action\n\n#834\n\nchange branch naming in changelog action\n\n#837\n\nSupport specification of bandit configuration file in check-vulnerabilities action\n\n#838\n\ncapitalize fragments\n\n#852\n\nPrepend link to migration guide in github release notes\n\n#860\n\nImplementing basic smoke test for import\n\n#866\n\nUpdate project version\n\n#878\n\nUpdate git ls-remote\n\n#924\n\nSupport pre-releases\n\n#925\n\nStrengthen testing\n\n#929\n\nDependencies\n\n\n\n\n\nbump actions/download-artifact from 4.1.9 to 4.2.1 in the github-actions group\n\n#770\n\nupdate action-gh-release\n\n#777\n\nbump softprops/action-gh-release from 2.2.1 to 2.2.2 in the release-related-actions group\n\n#786\n\nbump actions/download-artifact from 4.2.1 to 4.3.0 in the github-actions group\n\n#795\n\nupdate pygithub requirement from <2,>=1.59 to >=1.59,<3 in /check-vulnerabilities\n\n#842\n\nbump awalsh128/cache-apt-pkgs-action from 1.4.3 to 1.5.0 in /_doc-build-linux in the doc-related-actions group across 1 directory\n\n#845\n\nBump the build-related-actions group across 1 directory with 2 updates\n\n#846\n\nbump softprops/action-gh-release from 2.2.1 to 2.2.2 in /release-github in the release-related-actions group across 1 directory\n\n#847\n\nbump dependabot/fetch-metadata from 2.3.0 to 2.4.0 in /hk-automerge-prs in the must-be-assigned-actions group across 1 directory\n\n#848\n\nbump the github-actions group across 11 directories with 4 updates\n\n#849\n\nDowngrade awalsh128/cache-apt-pkgs-action due to errors\n\n#856\n\nBump the github-actions group across 1 directory with 2 updates\n\n#863\n\nBump the build-related-actions group across 2 directories with 1 update\n\n#865, #914\n\nBump the github-actions group across 2 directories with 1 update\n\n#910\n\nBump pypa/cibuildwheel from 2.23.3 to 3.0.0 in /build-ci-wheels in the build-related-actions group across 1 directory\n\n#911\n\nBump awalsh128/cache-apt-pkgs-action from 1.4.3 to 1.5.1 in /_doc-build-linux in the doc-related-actions group across 1 directory\n\n#927\n\nBump pypa/cibuildwheel from 3.0.0 to 3.0.1 in /build-ci-wheels in the build-related-actions group across 1 directory\n\n#928\n\nBump the github-actions group across 5 directories with 2 updates\n\n#957\n\nBump awalsh128/cache-apt-pkgs-action from 1.5.1 to 1.5.3 in /_doc-build-linux in the doc-related-actions group across 1 directory\n\n#958\n\nBump pypa/cibuildwheel from 3.0.1 to 3.1.4 in /build-ci-wheels in the build-related-actions group across 1 directory\n\n#966\n\nDocumentation\n\n\n\n\n\nUpdate documentation for v10 release\n\n#828\n\nAdd sbom files in github release note\n\n#912\n\nUse single quotes for literal in github action expression\n\n#918\n\nUpdate contributors.md with the latest contributors\n\n#923\n\nFixed\n\n\n\n\n\nenvironment variable is missing after zizmor refactor\n\n#796\n\nci_cd_release action\n\n#800\n\ninstall from poetry.lock if present\n\n#805\n\nremove marshmallow dependency limit\n\n#806\n\nallow to specify working directory\n\n#807\n\navoid using pip cache with uv\n\n#811\n\nproperly use poetry wheelhouse\n\n#817\n\nremove JSON builds\n\n#818\n\nbuild wheelhouse with poetry\n\n#826\n\ndocumentation\n\n#827\n\ninput parameter generate-release-notes in release-github\n\n#832\n\nupdate to latest version\n\n#839\n\ndiscovery of artifacts in release-github\n\n#840\n\ndefault value for prune-uv-cache\n\n#850\n\nHousekeeping package clean actions\n\n#855\n\nRelease-github python setup and sbom pattern\n\n#871\n\nCreate a virtual environment in the changelog deployment action\n\n#872\n\nInstall packages at system level\n\n#873\n\nRemove the usage of uv for doc-deploy-changelog\n\n#874\n\nSmoke test for poetry projects in editable mode\n\n#875\n\nRemove depreciated pymeilisearch options\n\n#913\n\nCorrect deleted branch references\n\n#943\n\nRemove unnecessary tag and date from release notes\n\n#948\n\nDependabot security alert\n\n#951\n\ncheck_vulnerabilities script for private repositories\n\n#955\n\nCorrect spelling and improve description for changelog category determination\n\n#961\n\nCorrect ci_cd_pr.yml configuration\n\n#969\n\nIssues causing release failure\n\n#977\n\nMaintenance\n\n\n\n\n\nupdate CHANGELOG for v9.0.0\n\n#768\n\nupdate CHANGELOG for v9.0.1\n\n#772\n\nrewrite dependabot checks\n\n#774\n\nupdate CHANGELOG for v9.0.2\n\n#775\n\nupdate CHANGELOG for v9.0.3\n\n#781\n\nupdate CHANGELOG for v9.0.6\n\n#785\n\nupdate CHANGELOG for v9.0.7\n\n#792\n\nupdate CHANGELOG for v9.0.8\n\n#801\n\nuse ansys/actions/doc-deploy-pr\n\n#802\n\nupdate uv settings\n\n#825\n\nremove deprecated line\n\n#830\n\nupdate dependabot inputs to match groups\n\n#841\n\nUpdate changelog for v9.0.12\n\n#854\n\nImprove smoke tests handling\n\n#861\n\nAdd sbom artifacts to github release\n\n#862\n\nUpdate changelog for v9.0.13\n\n#869\n\nUpdate changelog for v10.0.4\n\n#877\n\nUpdate changelog for v10.0.5\n\n#881\n\nUpdate changelog for v10.0.6\n\n#885\n\nUpdate changelog for v10.0.7\n\n#889\n\nUpdate changelog for v10.0.8\n\n#891\n\nUpdate changelog for v10.0.9\n\n#899\n\nUpdate changelog for v10.0.10\n\n#904\n\nUpdate changelog for v10.0.11\n\n#909\n\nUse dependabot cooldown for pip and github actions\n\n#915\n\nUpdate changelog for v10.0.12\n\n#917\n\nUpdate CHANGELOG for v10.0.13\n\n#936\n\nUpdate ci_cd_night workflow\n\n#947\n\nUpdate CHANGELOG for v10.0.14\n\n#950\n\nEnsure manual approval on pr workflows\n\n#960\n\nBump zizmor version\n\n#967\n\nUpdate CHANGELOG for v10.0.15\n\n#973\n\nMiscellaneous\n\n\n\n\n\nAllow to mix dependency groups and optional targets\n\n#836\n\nRemove unnecessary echo\n\n#905\n\nUpdate rolling release\n\n#974"},{"objectID":"Release notes","href":"changelog.html#10015---september-01-2025","title":"Release notes > 10.0.15 - September 01, 2025","text":"10.0.15 - September 01, 2025\n\nDependencies\n\n\n\n\n\nTemporary pin typer dependency (transitive)\n\n#971"},{"objectID":"Release notes","href":"changelog.html#10014---august-06-2025","title":"Release notes > 10.0.14 - August 06, 2025","text":"10.0.14 - August 06, 2025\n\nFixed\n\n\n\n\n\nRun safety on exported dependencies\n\n#920\n\nAdd end of file newline to changelog fragment file on generation\n\n#931\n\nKeep running when advisories are not reachable\n\n#932\n\ncheck-vulnerabilities action on Windows and projects using poetry\n\n#945"},{"objectID":"Release notes","href":"changelog.html#10013---july-25-2025","title":"Release notes > 10.0.13 - July 25, 2025","text":"10.0.13 - July 25, 2025\n\nDocumentation\n\n\n\n\n\nReplace broken links with correct ones\n\n#930\n\nFixed\n\n\n\n\n\nCapitalization of changelog fragments\n\n#934"},{"objectID":"Release notes","href":"changelog.html#10012---june-26-2025","title":"Release notes > 10.0.12 - June 26, 2025","text":"10.0.12 - June 26, 2025\n\nDocumentation\n\n\n\n\n\nAdding mention of pyansys dev guide for vulnerabilities\n\n#916"},{"objectID":"Release notes","href":"changelog.html#10011---june-12-2025","title":"Release notes > 10.0.11 - June 12, 2025","text":"10.0.11 - June 12, 2025\n\nAdded\n\n\n\n\n\nImproving error message for smoke tests\n\n#908"},{"objectID":"Release notes","href":"changelog.html#10010---june-11-2025","title":"Release notes > 10.0.10 - June 11, 2025","text":"10.0.10 - June 11, 2025\n\nDependencies\n\n\n\n\n\nBump softprops/action-gh-release from 2.2.2 to 2.3.2 in /release-github in the release-related-actions group across 1 directory\n\n#903\n\nFixed\n\n\n\n\n\nWrong variable name for sphinx options\n\n#900\n\nVariable resolution\n\n#901"},{"objectID":"Release notes","href":"changelog.html#1009---june-10-2025","title":"Release notes > 10.0.9 - June 10, 2025","text":"10.0.9 - June 10, 2025\n\nDocumentation\n\n\n\n\n\nUpdate the description of the option named package-org.\n\n#893\n\nDocument installation by uv\n\n#896"},{"objectID":"Release notes","href":"changelog.html#1008---june-06-2025","title":"Release notes > 10.0.8 - June 06, 2025","text":"10.0.8 - June 06, 2025\n\nFixed\n\n\n\n\n\nRelease-github artifacts attestation\n\n#890"},{"objectID":"Release notes","href":"changelog.html#1007---june-06-2025","title":"Release notes > 10.0.7 - June 06, 2025","text":"10.0.7 - June 06, 2025\n\nFixed\n\n\n\n\n\nDoc build on windows input issues\n\n#888"},{"objectID":"Release notes","href":"changelog.html#1006---june-05-2025","title":"Release notes > 10.0.6 - June 05, 2025","text":"10.0.6 - June 05, 2025\n\nDocumentation\n\n\n\n\n\nUse bash shell for windows\n\n#879\n\nFixed\n\n\n\n\n\nRaise warning if not using trusted publishers\n\n#883\n\nMissing skip-existing command handling\n\n#884"},{"objectID":"Release notes","href":"changelog.html#1005---june-05-2025","title":"Release notes > 10.0.5 - June 05, 2025","text":"10.0.5 - June 05, 2025\n\nFixed\n\n\n\n\n\nMissing environment variable on pypi releasing\n\n#880"},{"objectID":"Release notes","href":"changelog.html#1004---june-04-2025","title":"Release notes > 10.0.4 - June 04, 2025","text":"10.0.4 - June 04, 2025\n\nFixed\n\n\n\n\n\nDoc-deploy-changelog\n\n#876"},{"objectID":"Release notes","href":"changelog.html#1003---june-03-2025","title":"Release notes > 10.0.3 - June 03, 2025","text":"10.0.3 - June 03, 2025\n\nFixed\n\n\n\n\n\nSmoke test for poetry projects in editable mode\n\n#875"},{"objectID":"Release notes","href":"changelog.html#1002---june-03-2025","title":"Release notes > 10.0.2 - June 03, 2025","text":"10.0.2 - June 03, 2025\n\nFixed\n\n\n\n\n\nRemove the usage of uv for doc-deploy-changelog\n\n#874"},{"objectID":"Release notes","href":"changelog.html#1001---june-03-2025","title":"Release notes > 10.0.1 - June 03, 2025","text":"10.0.1 - June 03, 2025\n\nAdded\n\n\n\n\n\ncheck actions security action\n\n#725\n\nuv as default package manager\n\n#754\n\ncheck environment approval\n\n#776\n\nadd compatibility with dependency groups\n\n#794\n\npr documentation deployment and cleanup\n\n#799\n\nallow to specify working-directory\n\n#820\n\noption for maximum number of pr doc deployment\n\n#823\n\nensure matching and metadata version\n\n#833\n\nadd SBOM to wheelhouse action\n\n#834\n\nchange branch naming in changelog action\n\n#837\n\nSupport specification of bandit configuration file in check-vulnerabilities action\n\n#838\n\ncapitalize fragments\n\n#852\n\nPrepend link to migration guide in github release notes\n\n#860\n\nImplementing basic smoke test for import\n\n#866\n\nDependencies\n\n\n\n\n\nbump actions/download-artifact from 4.1.9 to 4.2.1 in the github-actions group\n\n#770\n\nupdate action-gh-release\n\n#777\n\nbump softprops/action-gh-release from 2.2.1 to 2.2.2 in the release-related-actions group\n\n#786\n\nbump actions/download-artifact from 4.2.1 to 4.3.0 in the github-actions group\n\n#795\n\nupdate pygithub requirement from <2,>=1.59 to >=1.59,<3 in /check-vulnerabilities\n\n#842\n\nbump awalsh128/cache-apt-pkgs-action from 1.4.3 to 1.5.0 in /_doc-build-linux in the doc-related-actions group across 1 directory\n\n#845\n\nBump the build-related-actions group across 1 directory with 2 updates\n\n#846\n\nbump softprops/action-gh-release from 2.2.1 to 2.2.2 in /release-github in the release-related-actions group across 1 directory\n\n#847\n\nbump dependabot/fetch-metadata from 2.3.0 to 2.4.0 in /hk-automerge-prs in the must-be-assigned-actions group across 1 directory\n\n#848\n\nbump the github-actions group across 11 directories with 4 updates\n\n#849\n\nDowngrade awalsh128/cache-apt-pkgs-action due to errors\n\n#856\n\nBump the github-actions group across 1 directory with 2 updates\n\n#863\n\nBump the build-related-actions group across 2 directories with 1 update\n\n#865\n\nDocumentation\n\n\n\n\n\nUpdate documentation for v10 release\n\n#828\n\nFixed\n\n\n\n\n\nenvironment variable is missing after zizmor refactor\n\n#796\n\nci_cd_release action\n\n#800\n\ninstall from poetry.lock if present\n\n#805\n\nremove marshmallow dependency limit\n\n#806\n\nallow to specify working directory\n\n#807\n\navoid using pip cache with uv\n\n#811\n\nproperly use poetry wheelhouse\n\n#817\n\nremove JSON builds\n\n#818\n\nbuild wheelhouse with poetry\n\n#826\n\ndocumentation\n\n#827\n\ninput parameter generate-release-notes in release-github\n\n#832\n\nupdate to latest version\n\n#839\n\ndiscovery of artifacts in release-github\n\n#840\n\ndefault value for prune-uv-cache\n\n#850\n\nHousekeeping package clean actions\n\n#855\n\nRelease-github python setup and sbom pattern\n\n#871\n\nCreate a virtual environment in the changelog deployment action\n\n#872\n\nInstall packages at system level\n\n#873\n\nMaintenance\n\n\n\n\n\nupdate CHANGELOG for v9.0.0\n\n#768\n\nupdate CHANGELOG for v9.0.1\n\n#772\n\nrewrite dependabot checks\n\n#774\n\nupdate CHANGELOG for v9.0.2\n\n#775\n\nupdate CHANGELOG for v9.0.3\n\n#781\n\nupdate CHANGELOG for v9.0.6\n\n#785\n\nupdate CHANGELOG for v9.0.7\n\n#792\n\nupdate CHANGELOG for v9.0.8\n\n#801\n\nuse ansys/actions/doc-deploy-pr\n\n#802\n\nupdate uv settings\n\n#825\n\nremove deprecated line\n\n#830\n\nupdate dependabot inputs to match groups\n\n#841\n\nUpdate changelog for v9.0.12\n\n#854\n\nImprove smoke tests handling\n\n#861\n\nAdd sbom artifacts to github release\n\n#862\n\nUpdate changelog for v9.0.13\n\n#869\n\nMiscellaneous\n\n\n\n\n\nAllow to mix dependency groups and optional targets\n\n#836"},{"objectID":"Release notes","href":"changelog.html#9013---may-30-2025","title":"Release notes > 9.0.13 - May 30, 2025","text":"9.0.13 - May 30, 2025\n\nFixed\n\n\n\n\n\nAdvanced search path\n\n#868"},{"objectID":"Release notes","href":"changelog.html#9012---may-26-2025","title":"Release notes > 9.0.12 - May 26, 2025","text":"9.0.12 - May 26, 2025\n\nFixed\n\n\n\n\n\nCheck licenses logic alignment\n\n#853"},{"objectID":"Release notes","href":"changelog.html#908---may-06-2025","title":"Release notes > 9.0.8 - May 06, 2025","text":"9.0.8 - May 06, 2025\n\nMiscellaneous\n\n\n\n\n\nremove deprecations and v8 refs\n\n#798"},{"objectID":"Release notes","href":"changelog.html#907---april-29-2025","title":"Release notes > 9.0.7 - April 29, 2025","text":"9.0.7 - April 29, 2025\n\nFixed\n\n\n\n\n\npin quarto version\n\n#791"},{"objectID":"Release notes","href":"changelog.html#906---april-21-2025","title":"Release notes > 9.0.6 - April 21, 2025","text":"9.0.6 - April 21, 2025\n\nFixed\n\n\n\n\n\nskip installation on doc-deploy-changelog\n\n#782\n\nadd package key in towncrier.toml\n\n#783\n\nAdd newline between environment variables in Python\n\n#784"},{"objectID":"Release notes","href":"changelog.html#903---april-18-2025","title":"Release notes > 9.0.3 - April 18, 2025","text":"9.0.3 - April 18, 2025\n\nMaintenance\n\n\n\n\n\nadd upper bound on marshmallow\n\n#780"},{"objectID":"Release notes","href":"changelog.html#902---april-09-2025","title":"Release notes > 9.0.2 - April 09, 2025","text":"9.0.2 - April 09, 2025\n\nFixed\n\n\n\n\n\nbuild-wheelhouse: remove new lines inside run block\n\n#761"},{"objectID":"Release notes","href":"changelog.html#901---april-09-2025","title":"Release notes > 9.0.1 - April 09, 2025","text":"9.0.1 - April 09, 2025\n\nDocumentation\n\n\n\n\n\nfix link\n\n#769"},{"objectID":"Release notes","href":"changelog.html#900---april-08-2025","title":"Release notes > 9.0.0 - April 08, 2025","text":"9.0.0 - April 08, 2025\n\nDependencies\n\n\n\n\n\nbump sphinx from 8.2.1 to 8.2.3 in /requirements\n\n#710\n\nbump ansys-sphinx-theme from 1.3.2 to 1.3.3 in /requirements\n\n#729\n\nbump the github-actions group with 2 updates\n\n#746\n\nDocumentation\n\n\n\n\n\nsetup changelog\n\n#699\n\nadd SECURITY.md\n\n#709\n\nadd CONTRIBUTING.md\n\n#712\n\nchange migration guide version to v8.2\n\n#713\n\nextend v8.2 new features notes\n\n#718\n\nlog deprecation only for trusted publishers\n\n#719\n\nfix vale warning\n\n#737\n\ndo not check link on www.x.org/*\n\n#755\n\nFixed\n\n\n\n\n\nuse ansys/pip-licenses to handle PEP 639\n\n#698\n\nsyntax\n\n#714\n\navoids installing project and provides support for non-python projects\n\n#715\n\nrolling release job\n\n#716\n\nmajor variable\n\n#717\n\ndefault should be false for “generate release notes” entry\n\n#745\n\ndrop build and wheel packages\n\n#756\n\noptional build and wheel installation\n\n#762\n\nuse trusted publishers from PyPA action\n\n#763\n\ngithub-ref\n\n#764\n\ntag check\n\n#766\n\nMaintenance\n\n\n\n\n\nnightly deployment does not have the CNAME\n\n#711\n\nupdate CHANGELOG for v8.2.11\n\n#721\n\nupdate CHANGELOG for v8.2.13\n\n#724\n\nupdate CHANGELOG for v8.2.16\n\n#728\n\nupdate CHANGELOG for v8.2.26\n\n#733\n\nupdate CHANGELOG for v8.2.27\n\n#741\n\nupdate CHANGELOG for v8.2.28\n\n#743\n\nupdate CHANGELOG for v8.2.30\n\n#749\n\nchangelog action should depend on rolling release\n\n#750\n\nrefactor logic for PRs opened by dependabot\n\n#751\n\nadd dependabot cooldown for pip\n\n#752\n\nMiscellaneous\n\n\n\n\n\nwarn about release pypi deprecation and encourage to use trusted publisher\n\n#707\n\nuse SHA version for pypa/gh-action-pypi-publish\n\n#734\n\nuse full length commit SHA instead of tags for external github actions\n\n#739\n\nremove trusted publisher\n\n#758"},{"objectID":"Release notes","href":"changelog.html#8230---march-25-2025","title":"Release notes > 8.2.30 - March 25, 2025","text":"8.2.30 - March 25, 2025\n\nMaintenance\n\n\n\n\n\nclarify comment statement on release-github action\n\n#748"},{"objectID":"Release notes","href":"changelog.html#8228---march-21-2025","title":"Release notes > 8.2.28 - March 21, 2025","text":"8.2.28 - March 21, 2025\n\nFixed\n\n\n\n\n\nsanity check on inputs for release-github action\n\n#742"},{"objectID":"Release notes","href":"changelog.html#8227---march-20-2025","title":"Release notes > 8.2.27 - March 20, 2025","text":"8.2.27 - March 20, 2025\n\nDocumentation\n\n\n\n\n\nadd documentation on automerge action\n\n#740"},{"objectID":"Release notes","href":"changelog.html#8226---march-14-2025","title":"Release notes > 8.2.26 - March 14, 2025","text":"8.2.26 - March 14, 2025\n\nFixed\n\n\n\n\n\nrelease-github body\n\n#732"},{"objectID":"Release notes","href":"changelog.html#8216---march-11-2025","title":"Release notes > 8.2.16 - March 11, 2025","text":"8.2.16 - March 11, 2025\n\nMaintenance\n\n\n\n\n\nfix github variable\n\n#727"},{"objectID":"Release notes","href":"changelog.html#8213---march-06-2025","title":"Release notes > 8.2.13 - March 06, 2025","text":"8.2.13 - March 06, 2025\n\nFixed\n\n\n\n\n\ninstall for Python libraries\n\n#723"},{"objectID":"Release notes","href":"changelog.html#8211---march-05-2025","title":"Release notes > 8.2.11 - March 05, 2025","text":"8.2.11 - March 05, 2025\n\nFixed\n\n\n\n\n\ntags\n\n#720"},{"objectID":"Release notes","href":"changelog.html#8210---march-05-2025","title":"Release notes > 8.2.10 - March 05, 2025","text":"8.2.10 - March 05, 2025\n\nDocumentation\n\n\n\n\n\nextend v8.2 new features notes\n\n#718\n\nlog deprecation only for trusted publishers\n\n#719"},{"objectID":"Release notes","href":"changelog.html#825---march-04-2025","title":"Release notes > 8.2.5 - March 04, 2025","text":"8.2.5 - March 04, 2025\n\nDependencies\n\n\n\n\n\nbump sphinx from 8.2.1 to 8.2.3 in /requirements\n\n#710\n\nDocumentation\n\n\n\n\n\nsetup changelog\n\n#699\n\nadd SECURITY.md\n\n#709\n\nadd CONTRIBUTING.md\n\n#712\n\nchange migration guide version to v8.2\n\n#713\n\nFixed\n\n\n\n\n\nsyntax\n\n#714\n\navoids installing project and provides support for non-python projects\n\n#715\n\nrolling release job\n\n#716\n\nmajor variable\n\n#717\n\nMaintenance\n\n\n\n\n\nnightly deployment does not have the CNAME\n\n#711\n\nMiscellaneous\n\n\n\n\n\nwarn about release pypi deprecation and encourage to use trusted publisher\n\n#707"},{"objectID":"Home","href":"migrations/docs-style-vale-version-update.html#doc-style-action---migrating-from-vale-2x-to-3x","title":"Doc-style action - migrating from Vale 2.X to 3.X","text":"Doc-style action - migrating from Vale 2.X to 3.X\n\nWhen migrating ansys/actions/doc-style from v5 to higher versions, the default Vale version is upgraded to v3.\nCertain changes must be made to the repository to ensure that the doc-style action performs without issues.\nAdditionally, it is possible to use ansys/actions older than v5 while utilizing Vale v3\nas input for the doc-style action like below.\n\nIn any of the preceding conditions, there are two mandatory changes and one optional (depending on\nthe repository setup) needs to implemented:\n\nUpdate Vocab/ANSYS path\n\nIn order to comply with the requirements of Vale v3, it is necessary to update the vocabularies\npath under the doc/styles directory. Specifically, the default vocabularies path should be modified from\nVocab/ANSYS to config/vocabularies/ANSYS. This adjustment ensures that Vale can locate the required vocabulary files.\n\nUpdate .gitignore\n\nIf your repository has .gitignore files under styles folder, please update them according to vocabularies changes\n\nTurn off Vale.Terms\n\nLocate the section in your doc/.vale.ini file where styles are applied.\nAdd Vale.Terms = NO under the section where styles are applied, typically marked with [*.{rst}].\n\nUpdate codespell hook\n\nIf your repository includes a codespell hook in the .pre-commit-config.yaml file,\nutilizing the accept.txt file, it necessitates modification to reflect the new path\nas provided below.\n\nFinally, verify that the doc-style action is functioning correctly with the latest changes applied.\nRun the action and ensure that the documentation style checks are performed without any issues."},{"objectID":"Home","href":"migrations/docs-changelog-setup.html#doc-changelog-action-setup","title":"Doc-changelog action setup","text":"Doc-changelog action setup\n\nThe release notes for your project can either be in your documentation or the CHANGELOG.md file.\nFollow the instructions in the update the workflow section to add the ansys/actions/doc-changelog action\nto your workflow, and then choose between adding the release notes in your documentation\nor the CHANGELOG.md file."},{"objectID":"Home","href":"migrations/docs-changelog-setup.html#update-the-workflow","title":"Doc-changelog action setup > Update the workflow","text":"Update the workflow\n\nUpdate the .github/workflows/label.yml file to use the changelog action.\n\nChange the pull_request trigger at the top of the preceding .yml file so that it lists the pull request actions that cause the workflows to run:\n\nAt the end of the .github/workflows/label.yml file, add the following lines for the changelog action:\n\nNext, follow the instructions to create release notes in your documentation or CHANGELOG.md file depending on your preference."},{"objectID":"Home","href":"migrations/docs-changelog-setup.html#include-the-release-notes-in-your-documentation","title":"Doc-changelog action setup > Include the release notes in your documentation","text":"Include the release notes in your documentation\n\nCreate the doc/changelog.d directory and then within it add a file named changelog_template.jinja that contains the following lines:\n\nCreate a new file named changelog.rst in the doc/source directory. Add the following lines to the file:\n\nIf your project previously used CHANGELOG.md to record the release notes, change the description under “Release notes,” replacing {org-name} and {repo-name} with the name of the organization and repository respectively, and {latest-version} with the most recent version in your CHANGELOG.md file:\n\nAdd changelog to the toctree list in the doc/source/index.rst file. changelog is placed last in the toctree list, so the “Release notes” tab is last in the documentation.\n\nAdd the following lines to the doc/source/conf.py file, replacing {org-name} and {repo-name} with the name of the organization and repository respectively:\n\nThis assumes the following code already exists in the doc/source/conf.py file:\n\n5. Add the following lines to the pyproject.toml file, replacing {org-name} and {repo-name} with the name of the organization and repository respectively.\nAlso, replace ansys.<product>.<library> with the name under tool.flit.module. For example, ansys.geometry.core.\n\nIf empty, the previous CHANGELOG.md file can be removed from the repository, as the changelog is now part of the documentation.\n\nHowever, if the CHANGELOG.md file is kept, it can be adapted to include the link to the documentation changelog.\n\nFor example, the CHANGELOG.md file could look like this:\n\nReference pull requests for the changes can be found in the PyAnsys Geometry and PyMechanical repositories.\nThe PyAnsys Geometry pull request includes some other changes, but the changelog implementation is the same as described in this document."},{"objectID":"Home","href":"migrations/docs-changelog-setup.html#include-the-release-notes-in-changelogmd","title":"Doc-changelog action setup > Include the release notes in CHANGELOG.md","text":"Include the release notes in CHANGELOG.md\n\nCreate the doc/changelog.d directory and then within it add a file named changelog_template.jinja that contains the following lines:\n\nAdd the following lines to the CHANGELOG.md file, replacing {org-name} and {repo-name} with the name of the organization and repository respectively:\n\nIf the CHANGELOG.md file already has sections for previous releases, make sure to put the\n\"towncrier release notes start\" comment before the release sections. For example:\n\n3. Add the following lines to the pyproject.toml file, replacing {repo-name} with the name of the repository.\nAlso, replace ansys.<product>.<library> with the name under tool.flit.module. For example, ansys.geometry.core.\n\nA reference pull request for these changes can be found in the PyAnsys Geometry #1023 pull request."},{"objectID":"Home","href":"migrations/docs-changelog-setup.html#towncrier-commands","title":"Doc-changelog action setup > towncrier commands","text":"towncrier commands\n\nThese commands are helpful for creating changelog fragment files manually, as well as building your CHANGELOG.md file\nwith the fragments in the doc/changelog.d directory.\n\nCreate a changelog file manually:\n\n“Added a feature” adds the content of the file named 1.added.md.\nThe number one in the “1.added.md” file is the pull request number, and “added” is a subsection\nunder the released version. For example, CHANGELOG.md would look like this if\nthe preceding MD file only existed in the changelog.d directory:\n\nWhen you are ready to do a release for your repository, set up the ansys/actions/doc-deploy-changelog action\nto automate the process of generating the changelog. If you want to do it manually, run the following command to\nupdate the CHANGELOG.md file with the files in the changelog.d directory, replacing {version} with your\nrelease number. For example, 0.10.8. Do not include “v” in the version:\n\nIf you want to update the CHANGELOG.md file but keep the files in the changelog.d directory, run this command:\n\nIf you only want to preview the changelog and not make changes to the CHANGELOG.md file,\nrun the following command:"},{"objectID":"Home","href":"release-actions/index.html#release-actions","title":"Release actions","text":"Release actions\n\nRelease actions provide for releasing the various artifacts of a Python library.\n\nThese actions assume that you have used the Documentation actions\nand the Build actions. The reason is that the artifacts generated during these\nactions are the ones to be released."},{"objectID":"Home","href":"release-actions/index.html#release-pypi-private-action","title":"Release actions > Release PyPI private action","text":"Release PyPI private action\n\nRelease library artifacts to the PyAnsys private index. Use the\nPYANSYS_PRIVATE_PYPI_TOKEN as the token. Artifacts get downloaded from the\nCI/CD pipeline and are assumed to be named <library-name>-artifacts. This\nfile is expected to contain a wheel and a source distribution file for the\ndesired library.\n\nStarting with version ansys-actions@v9, the use-trusted-publisher\ninput parameter is deprecated. Refer to the\nrelease_pypi_trusted_publisher if you wish to use this security\nfeature.\n\nSource code for this action \n\n\n\n\n\n\n\n\n\n\n\nInput\n\nDescription\n\nRequired\n\nType\n\nDefault\n\nlibrary-name\n\nName of the Python library to be published.\n\nTrue\n\nstring\n\n\n\ntwine-username\n\nUser name used when uploading to the PyAnsys private index.\n\nFalse\n\nstring\n\n__token__\n\ntwine-token\n\nPassword used when uploading to the PyAnsys private index.\n\nFalse\n\nstring\n\n\n\nuse-trusted-publisher\n\nWhether to use the OIDC token for releasing. Default value is false.\nThis is useful when you want to publish to PyPI through a CI/CD pipeline\nas a Trusted Publisher. It is necessary that your repository has been authorized\nto use Trusted Publisher’s. For more information, see\nUsing a Trusted Publisher.\n\npermissions: id-token: write is mandatory for trusted publishing.\n\nFalse\n\nboolean\n\nFalse\n\ndry-run\n\nWhether to run or not this action in testing mode. Testing mode executes\nall the action steps except the releasing artifacts one. This allows\ndevelopers to verify the health of the action once integrated in their\nCI/CD pipelines without actually publishing artifacts. Default value is\nfalse.\n\nFalse\n\nboolean\n\nFalse\n\nskip-existing\n\nContinue uploading files if one already exists. Only valid when uploading\nto PyPI. Other implementations may not support this.\n\nFalse\n\nboolean\n\nTrue\n\npython-version\n\nPython version for installing and using twine.\n\nFalse\n\nstring\n\n3.11\n\nindex-name\n\nThe name of the index endpoint used for uploading the artifacts.\n\nTrue\n\nstring\n\nhttps://pkgs.dev.azure.com/pyansys/_packaging/pyansys/pypi/upload"},{"objectID":"Home","href":"release-actions/index.html#examples","title":"Release actions > Examples","text":"Examples\n\nRelease to private PyPI"},{"objectID":"Home","href":"release-actions/index.html#release-pypi-test-action","title":"Release actions > Release PyPI test action","text":"Release PyPI test action\n\nRelease library artifacts to the Test PyPI public index. Use the\nPYANSYS_PYPI_TEST_PAT as the token. Artifacts get downloaded from the\nCI/CD pipeline and are assumed to be named <library-name>-artifacts. This\nfile is expected to contain a wheel file and a source distribution file for\nthe desired library.\n\nStarting with version ansys-actions@v9, the use-trusted-publisher\ninput parameter is deprecated. Refer to the\nrelease_pypi_trusted_publisher if you wish to use this security\nfeature.\n\nSource code for this action \n\n\n\n\n\n\n\n\n\n\n\nInput\n\nDescription\n\nRequired\n\nType\n\nDefault\n\nlibrary-name\n\nName of the Python library to be published.\n\nTrue\n\nstring\n\n\n\ntwine-username\n\nUser name used when uploading to the public Test PyPI index.\n\nFalse\n\nstring\n\n__token__\n\ntwine-token\n\nPassword used when uploading to the public Test PyPI index.\n\nFalse\n\nstring\n\n\n\nuse-trusted-publisher\n\nWhether to use the OIDC token for releasing. Default value is false.\nThis is useful when you want to publish to PyPI through a CI/CD pipeline\nas a Trusted Publisher. It is necessary that your repository has been authorized\nto use Trusted Publisher’s. For more information, see\nUsing a Trusted Publisher.\n\npermissions: id-token: write is mandatory for trusted publishing.\n\nFalse\n\nboolean\n\nFalse\n\ndry-run\n\nWhether to run or not this action in testing mode. Testing mode executes\nall the action steps except the releasing artifacts one. This allows\ndevelopers to verify the health of the action once integrated in their\nCI/CD pipelines without actually publishing artifacts. Default value is\nfalse.\n\nFalse\n\nboolean\n\nFalse\n\npython-version\n\nPython version for installing and using twine.\n\nFalse\n\nstring\n\n3.11\n\nskip-existing\n\nContinue uploading files if one already exists. Only valid when uploading\nto PyPI. Other implementations may not support this.\n\nFalse\n\nboolean\n\nTrue"},{"objectID":"Home","href":"release-actions/index.html#examples","title":"Release actions > Examples","text":"Examples\n\nRelease to test PyPI"},{"objectID":"Home","href":"release-actions/index.html#release-pypi-public-action","title":"Release actions > Release PyPI public action","text":"Release PyPI public action\n\nRelease library artifacts to the PyPI public index. Use the PYPI_TOKEN as\nthe token. Artifacts get downloaded from the CI/CD pipeline and are assumed to be\nnamed <library-name>-artifacts. This file is expected to contain a wheel file\nand a source distribution file for the desired library.\n\nStarting with version ansys-actions@v9, the use-trusted-publisher\ninput parameter is deprecated. Refer to the\nrelease_pypi_trusted_publisher if you wish to use this security\nfeature.\n\nSource code for this action \n\n\n\n\n\n\n\n\n\n\n\nInput\n\nDescription\n\nRequired\n\nType\n\nDefault\n\nlibrary-name\n\nName of the Python library to be published.\n\nTrue\n\nstring\n\n\n\ntwine-username\n\nUser name used when uploading to the public PyPI index.\n\nFalse\n\nstring\n\n__token__\n\ntwine-token\n\nPassword used when uploading to the public PyPI index.\n\nFalse\n\nstring\n\n\n\nuse-trusted-publisher\n\nWhether to use the OIDC token for releasing. Default value is false.\nThis is useful when you want to publish to PyPI through a CI/CD pipeline\nas a Trusted Publisher. It is necessary that your repository has been authorized\nto use Trusted Publisher’s. For more information, see\nUsing a Trusted Publisher.\n\npermissions: id-token: write is mandatory for trusted publishing.\n\nFalse\n\nboolean\n\nFalse\n\ndry-run\n\nWhether to run or not this action in testing mode. Testing mode executes\nall the action steps except the releasing artifacts one. This allows\ndevelopers to verify the health of the action once integrated in their\nCI/CD pipelines without actually publishing artifacts. Default value is\nfalse.\n\nFalse\n\nboolean\n\nFalse\n\nskip-existing\n\nContinue uploading files if one already exists. Only valid when uploading\nto PyPI. Other implementations may not support this.\n\nFalse\n\nboolean\n\nTrue\n\npython-version\n\nPython version for installing and using twine.\n\nFalse\n\nstring\n\n3.11"},{"objectID":"Home","href":"release-actions/index.html#examples","title":"Release actions > Examples","text":"Examples\n\nRelease to public PyPI"},{"objectID":"Home","href":"release-actions/index.html#release-github-action","title":"Release actions > Release GitHub action","text":"Release GitHub action\n\nRelease library artifacts to the GitHub release section. Some minimum\nartifacts are required before running this action. These artifacts include\ndocumentation-html, documentation-pdf, and\n<library-name>-artifacts files. This last file must contain the wheels and\nsource distribution files of the library.\n\nIf you are using the title_format and issue_format from the doc-changelog action\nsetup guide, https://actions.docs.ansys.com/version/dev/migrations/docs-changelog-setup.html,\nthe changelog for your release is included in the release notes on GitHub.\n\nSource code for this action \n\n\n\n\n\n\n\n\n\n\n\nInput\n\nDescription\n\nRequired\n\nType\n\nDefault\n\nlibrary-name\n\nName of the Python library to be published.\n\nTrue\n\nstring\n\n\n\ntoken\n\nRequired password, key or token with the correct credentials for deploying the\ndocumentation. If deploying to the current repository, the secrets.GITHUB_TOKEN token is\nis enough. For workflows deploying to other repositories, generate and\nuse a token with writing access\nto that repository.\n\nTrue\n\nstring\n\n\n\npython-version\n\nPython version used for installing towncrier and retrieving the release notes.\n\nFalse\n\nstring\n\n3.12\n\nuse-python-cache\n\nWhether to use the Python cache for installing previously downloaded\nlibraries. If true, previously downloaded libraries are installed from the\nPython cache. If false, libraries are downloaded from the PyPI index.\n\nFalse\n\nboolean\n\nTrue\n\nadditional-artifacts\n\nString containing a list of additional artifacts to be included in the\nGitHub release.\n\nFalse\n\nstring\n\n\n\ndry-run\n\nWhether to run or not this action in testing mode. Testing mode executes\nall the action steps except the releasing artifacts one. This allows\ndevelopers to verify the health of the action once integrated in their\nCI/CD pipelines without actually publishing artifacts. Default value is\nfalse.\n\nFalse\n\nboolean\n\nFalse\n\ntomli-version\n\nTomli version used for retrieving the towncrier directory.\n\nFalse\n\nstring\n\n2.2.1\n\npypandoc-binary-version\n\nPypandoc-binary version used for converting rst text to markdown.\n\nFalse\n\nstring\n\n1.15\n\nchangelog-release-notes\n\nWhether or not to generate release notes using the changelog file from the\npyproject.toml file’s [tool.towncrier] section.\n\nFalse\n\nboolean\n\nTrue\n\nonly-code\n\nOnly include the source code in the release. This can be helpful for\nrepositories that don’t create wheels and/or documentation.\n\nFalse\n\nboolean\n\nFalse\n\nadd-artifact-attestation-notes\n\nWhether or not to add artifact attestation notes to the release notes. The\nartifact attestations need to be generated during the build process using the\nattest-provenance: true input parameter in the build-wheelhouse and\nbuild-library actions with the appropriate permissions.\n\nFalse\n\nboolean\n\nFalse\n\ngenerate_release_notes\n\nDeprecated. Use the generate-release-notes input parameter.\n\nFalse\n\nboolean\n\nFalse\n\ngenerate-release-notes\n\nWhether to automatically generate the name and body for this release.\n\nIf this option is activated and the action is used to create text\ncontent for the release notes body, the content will be\npre-pended to the automatically generated notes.\n\nFalse\n\nboolean\n\nFalse\n\nuse-uv\n\nWhether to use uv as the default package manager instead of pip. Default value is true.\n\nFalse\n\nboolean\n\nTrue"},{"objectID":"Home","href":"release-actions/index.html#examples","title":"Release actions > Examples","text":"Examples\n\nRelease to GitHub"},{"objectID":"Home","href":"tests-actions/index.html#tests-actions","title":"Tests actions","text":"Tests actions\n\nThe tests actions allow to run the test suite for a Python library."},{"objectID":"Home","href":"tests-actions/index.html#test-library-action","title":"Tests actions > Test library action","text":"Test library action\n\nThis action runs the test suite for a Python library. This action accepts\nmarkers, options, and post arguments to be passed to pytest before executing the\ntest session.\n\nRun a test suite using pytest.\n\nSource code for this action \n\n\n\n\n\n\n\n\n\n\n\nInput\n\nDescription\n\nRequired\n\nType\n\nDefault\n\npython-version\n\nPython version used for installing and running pytest.\n\nFalse\n\nstring\n\n3.11\n\nuse-python-cache\n\nWhether to use the Python cache for installing previously downloaded\nlibraries. If true, previously downloaded libraries are installed from the\nPython cache. If false, libraries are downloaded from the PyPI index.\n\nFalse\n\nboolean\n\nTrue\n\npytest-markers\n\nSet of pytest markers in the form of\na string. These markers are used to discretize tests when running the test\nsession.\n\nFalse\n\nstring\n\n\n\npytest-extra-args\n\nSet of additional pytest arguments in the form of a string.\n\nFalse\n\n\n\n\n\npytest-postargs\n\nDirectory of the test suite and the level of verbosity.\n\nFalse\n\nstring\n\ntests -vv\n\nrequires-xvfb\n\nWhether to install X Virtual Frame Buffer (XVFB) and run\nthe whole test session using XVFB. The default value is false.\n\nFalse\n\nboolean\n\nFalse\n\ncheckout\n\nWhether to clone the repository in the CI/CD machine. Default value is\ntrue.\n\nFalse\n\nboolean\n\nTrue\n\nskip-install\n\nSkip installation process. This should be set to false when using poetry\nas the build-backend because it should be false with poetry as build-backend.\nThe default value is false.\n\nFalse\n\nboolean\n\nFalse\n\noptional-dependencies-name\n\nAny valid install targets defined in the pyproject.toml file, or the suffix\nof a requirement file. Multiple targets can be specified as a comma-separated\nlist. The associated dependencies are installed before running the tests.\nThe default value is 'tests'. Therefore, in case of a requirement file, the\ndefault file is requirements/requirements_tests.txt.\n\nFalse\n\nstring\n\ntests\n\ngroup-dependencies-name\n\nAny valid dependency groups defined in the pyproject.toml file. Multiple\ntargets can be specified as a comma-separated list. The associated dependencies\nare installed before running the tests.\nThe default value is ''.\n\nFalse\n\nstring\n\n\n\nrandomize\n\nWhether to randomize the order of the tests. The default value is false.\n\n\n\nboolean\n\nFalse\n\nuse-uv\n\nWhether to use uv as the default package manager instead of pip. Default value is true.\n\nFalse\n\nboolean\n\nTrue"},{"objectID":"Home","href":"tests-actions/index.html#examples","title":"Tests actions > Examples","text":"Examples\n\nOptimized testing with different operating systems and Python versions\n\nTesting library with different operating systems and Python versions"},{"objectID":"Home","href":"housekeeping-actions/index.html#housekeeping-actions","title":"Housekeeping actions","text":"Housekeeping actions\n\nHousekeeping actions provide for general repository operations such as package cleanup."},{"objectID":"Home","href":"housekeeping-actions/index.html#package-cleanup-of-untagged-versions","title":"Housekeeping actions > Package cleanup of untagged versions","text":"Package cleanup of untagged versions\n\nAction cleaning up untagged package versions published at ghcr.io.\nSource code for this action \n\n\n\n\n\n\n\n\n\n\n\nInput\n\nDescription\n\nRequired\n\nType\n\nDefault\n\npackage-name\n\nPackage name.\n\nTrue\n\nstring\n\n\n\ntoken\n\nToken with package deletion permissions.\n\nTrue\n\nstring\n\n\n\npackage-org\n\nOrganization where packages are published.\n\nFalse\n\nstring\n\nansys\n\nallow-last-days\n\nAvoid removing the last N days images: e.g. ‘2’.\n\nFalse\n\nstring\n\n\n\npython-version\n\nDesired Python version.\n\nFalse\n\nstring\n\n3.11\n\nuse-uv\n\nWhether to use uv as the default package manager instead of pip. Default value is true.\n\nFalse\n\nboolean\n\nTrue"},{"objectID":"Home","href":"housekeeping-actions/index.html#examples","title":"Housekeeping actions > Examples","text":"Examples\n\nPerform untagged versions cleanup"},{"objectID":"Home","href":"housekeeping-actions/index.html#package-cleanup-excluding-certain-versions","title":"Housekeeping actions > Package cleanup excluding certain versions","text":"Package cleanup excluding certain versions\n\nAction cleaning up all package versions published at ghcr.io except for certain tags.\nSource code for this action \n\n\n\n\n\n\n\n\n\n\n\nInput\n\nDescription\n\nRequired\n\nType\n\nDefault\n\npackage-name\n\nPackage name.\n\nTrue\n\nstring\n\n\n\ntoken\n\nToken with package deletion permissions.\n\nTrue\n\nstring\n\n\n\ntags-kept\n\nTags to be kept. Pass them as a list: e.g. ‘latest, latest-unstable’.\n\nTrue\n\nstring\n\n\n\npackage-org\n\nOrganization at which packages are published.\n\nFalse\n\nstring\n\nansys\n\nallow-last-days\n\nAvoid removing the last N days images: e.g. ‘2’.\n\nFalse\n\nstring\n\n\n\npython-version\n\nDesired Python version.\n\nFalse\n\nstring\n\n3.11\n\nuse-uv\n\nWhether to use uv as the default package manager instead of pip. Default value is true.\n\nFalse\n\nboolean\n\nTrue"},{"objectID":"Home","href":"housekeeping-actions/index.html#examples","title":"Housekeeping actions > Examples","text":"Examples\n\nPerform versions cleanup - except certain tags"},{"objectID":"Home","href":"housekeeping-actions/index.html#auto-merge-pull-requests","title":"Housekeeping actions > Auto-merge pull requests","text":"Auto-merge pull requests\n\nAction merging dependabot and pre-commit.ci PRs.\nSource code for this action \n\n\n\n\n\n\n\n\n\n\n\nInput\n\nDescription\n\nRequired\n\nType\n\nDefault\n\napprover\n\nApprover GitHub ID.\n\nTrue\n\nstring\n\n\n\napprover-token\n\nApprover GitHub token.\n\nTrue\n\nstring\n\n\n\nonly-allow-dependabot-patch\n\nOnly allow dependabot patch version updates. By default,\nthis is set to false (allowing also minor bumps).\n\nFalse\n\nboolean\n\nFalse"},{"objectID":"Home","href":"housekeeping-actions/index.html#examples","title":"Housekeeping actions > Examples","text":"Examples\n\nAutomerging dependabot and pre-commit.ci PRs"},{"objectID":"Home","href":"migrations/docs-deploy-pr-setup.html#deploy-documentation-from-a-pull-request","title":"Deploy documentation from a pull request","text":"Deploy documentation from a pull request\n\nIn versions earlier than v10.2, this action required you to include the closed GitHub event in\non.pull_request.types to trigger documentation cleanup when a PR was closed. Starting with\nversion v10.2, this requirement is removed. Documentation cleanup now happens automatically in the\nbackground. The cleanup process uses ansys/actions/doc-deploy-dev, so make sure that your\nworkflows also use version v10.2 or later of ansys/actions/doc-deploy-dev.\n\nThe ansys/action/doc-deploy-pr action automates the deployment of HTML documentation from a pull\nrequest (PR) and its removal when the PR is closed.\n\nThe maximum-pr-doc-deployments input limits the number of active documentation deployments, which\nis useful for repositories with multiple PRs. You can further control deployments using a labeling\nstrategy.\n\nThe action automatically adds the following comments to PRs:\n\nA URL to the deployed documentation.\n\nConfirmation of documentation removal for closed PRs.\n\nA notification if maximum-pr-doc-deployments is exceeded.\n\nTwo setup options are provided based on the desired level of control:\n\nBasic Setup\n\nDeploy documentation for every PR, provided the maximum-pr-doc-deployments limit is not\nexceeded. This setup is ideal for documentation-focused projects. Add the following to your\nworkflow file:\n\nFor versions prior to v10.2\n\n\n\nFor versions after v10.2\n\n\n\nSetup with Labeling Strategy\n\nDeploy documentation only for PRs explicitly labeled for deployment. This setup is recommended for\nlibraries where deploying documentation for all PRs may not be necessary.\n\nSteps:\n\nAdd a label to .github/labels.yml:\n\nAdd the label to .github/labeler.yml to prevent its removal:\n\nUpdate your workflow file:\n\nFor versions prior to v10.2\n\n\n\nFor versions after v10.2\n\n\n\nWith this setup, documentation is deployed only when the deploy-pr-doc label is added to a PR.\nFor an example, see this setup for\nansys/actions."}]