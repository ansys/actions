name: >
  Documentation Changelog

description: |
  Adds a newsfragment to the target repository using ``towncrier``
  containing the title and number of the pull request.


inputs:

  # Required inputs

  path-to-fragment:
    description: >
      Path to where the towncrier fragment is stored
    required: true
    type: string

  pr-branch:
    description: >
      Name of the pull request
    required: true
    type: string

  pr-title:
    description: >
      Title of the pull request
    required: true
    type: string

  pr-number:
    description: >
      The pull request number
    required: true
    type: string

  token:
    description: >
      GitHub token for doing a git commit & push
    required: true
    type: string

runs:
  using: "composite"
  steps:
    - name: "Install Git and clone project"
      uses: actions/checkout@v4
      with:
        ref: ${{ inputs.pr-branch }}

    - name: "Set up Python ${{ inputs.python-version }}"
      uses: ansys/actions/_setup-python@main
      with:
        python-version: ${{ inputs.python-version }}
        use-cache: ${{ inputs.use-python-cache }}

    - name: "Install towncrier"
      shell: bash
      run: |
        python -m pip install --upgrade pip towncrier

    - name: "Get pull request type"
      shell: bash
      run: |
        # Check inputs.pr-title is surrounded by double quotes
        title='${{ inputs.pr-title }}'
        if [[ "$title" =~ ^\".*\"$ ]]; then
          echo "PR title is wrapped in double quotes"
        else
          echo "PR title is not wrapped in double quotes"
          title="${{ inputs.pr-title }}"
        fi

        # Save title into env variable
        echo "PR-TITLE=$title" >> $GITHUB_ENV

        # Check if pr-title string starts with Add, Remove, Change, Fix, or Bump
        added=`if [[ $title =~ ^[a,A]dd ]]; then echo "True"; fi`
        removed=`if [[ $title =~ ^[r,R]emove ]]; then echo "True"; fi`
        changed=`if [[ $title =~ ^[c,C]hange ]]; then echo "True"; fi`
        fixed=`if [[ $title =~ ^[f,F]ix ]]; then echo "True"; fi`
        dependency=`if [[ $title =~ ^[b,B]ump ]]; then echo "True"; fi`

        # If string is not null, then save the pull request type as an env variable
        if [ ! -z "$added" ]; then
          echo "PR-TYPE=added" >> $GITHUB_ENV
        elif [ ! -z "$removed" ]; then
          echo "PR-TYPE=removed" >> $GITHUB_ENV
        elif [ ! -z "$changed" ]; then
          echo "PR-TYPE=changed" >> $GITHUB_ENV
        elif [ ! -z "$fixed" ]; then
          echo "PR-TYPE=fixed" >> $GITHUB_ENV
        elif [ ! -z "$dependency" ]; then
          echo "PR-TYPE=dependencies" >> $GITHUB_ENV
        else
          echo "The pull request title ${{ inputs.pr-title }} is invalid. Please ensure it starts with one of the following keywords:"
          echo  "Add, Remove, Change, Fix, or Bump (for dependencies)."
          exit 1
        fi

    - name: "Create and commit towncrier fragment"
      shell: bash
      run: |
        file="${{ inputs.pr-number }}.${{ env.PR-TYPE }}.md"
        changelog_file="${{ inputs.path-to-fragment }}/$file"

        # If fragment already exists with ${{ inputs.pr-number }}, remove it and create a new one
        if [[ "$changelog_file" == *"${{ inputs.pr-number }}."* ]]; then
          rm ${{ inputs.path-to-fragment }}/${{ inputs.pr-number }}.*
        fi

        # Create changelog fragment with towncrier
        towncrier create -c "${{ env.PR-TITLE }}" $file

        # Configure git username & email
        git config user.name 'github-actions[bot]'
        git config user.email 'github-actions[bot]@users.noreply.github.com'

        modified=`git diff HEAD --name-only`
        echo "modified: $modified"

        if [ ! -z "$modified" ]; then
          # Add and commit fragment
          git add .
          git commit -m "adding fragment"

          # Save modified env variable for next step
          echo "MODIFIED=True" >> $GITHUB_ENV
        else
          echo "MODIFIED=False" >> $GITHUB_ENV
        fi

    - name: "Push fragment to PR branch"
      if: ${{ env.MODIFIED }} == True
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ inputs.token }}
        branch: ${{ inputs.pr-branch }}