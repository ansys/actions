name: "Build a Python library."
description: "Build a Python library by generating wheels and sdist artifacts."

inputs:
  library-name:
    description: 'Name of the Python library.'
    required: true
    type: string
  python-version:
    description: 'Desired Python version for build.'
    default: '3.10'
    required: false
    type: string
  use-python-cache:
    description: 'Whether to use Python cache or not. Requires a pyproject.toml file.'
    required: false
    default: true
    type: boolean
  checkout:
      description: 'Whether to checkout the repository or not.'
      default: true
      required: false
      type: boolean

runs:
  using: "composite"
  steps:
  
    - name: "Install Git and clone project"
      uses: actions/checkout@v3
      if: ${{ inputs.checkout == 'true' }}
  
    - name: "Set up Python"
      uses: pyansys/actions/_setup-python@main
      with:
        python-version: ${{ inputs.python-version }}
        use-cache: ${{ inputs.use-python-cache }}

    - name: "Install build and twine"
      shell: bash
      run: |
        python -m pip install build twine

    - name: "Build distribution artifacts and check their health"
      shell: bash
      run: |
        python -m build && python -m twine check dist/*

    - name: "Upload distribution artifacts to GitHub artifacts"
      uses: actions/upload-artifact@v3.1.0
      with:
        name: ${{ inputs.library-name }}-artifacts
        path: dist/
        retention-days: 7
