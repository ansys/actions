name: >
  Build library action

description: >
  Verifies if a Python library builds properly. As a result of a successful
  building process, wheel and source distribution artifacts are generated. This
  action is expected to be used as an independent job.

inputs:

  # Required inputs

  library-name:
    description: >
      Name of the Python library. This is the name used when uploading the wheel
      and source distribution as artifacts. The name should be the same one used
      in the PyPI index.
    required: true
    type: string

  # Optional inputs

  python-version:
    description: >
      Python version used for installing and running ``pre-commit``.
    default: '3.10'
    required: false
    type: string

  use-python-cache:
    description: >
      If ``true``, uses Python cache to install previously downloaded
      libraries. When set to ``false``, all the required libraries are
      downloaded from the `PyPI <https://pypi.org>`_ index. To use this
      variable, your project needs to be installed using `the pyproject.toml
      file <https://dev.docs.pyansys.com/dev/packaging/structure.html#the-pyproject-toml-file>`_.
    required: false
    default: true
    type: boolean

runs:
  using: "composite"
  steps:
  
    - name: "Install Git and clone project"
      uses: actions/checkout@v3
  
    - name: "Set up Python"
      uses: pyansys/actions/_setup-python@main
      with:
        python-version: ${{ inputs.python-version }}
        use-cache: ${{ inputs.use-python-cache }}

    - name: "Install build and twine"
      shell: bash
      run: |
        python -m pip install build twine

    - name: "Build distribution artifacts and check their health"
      shell: bash
      run: |
        python -m build && python -m twine check dist/*

    - name: "Upload distribution artifacts to GitHub artifacts"
      uses: actions/upload-artifact@v3.1.0
      with:
        name: ${{ inputs.library-name }}-artifacts
        path: dist/
        retention-days: 7
