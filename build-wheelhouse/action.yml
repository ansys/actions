name: >
  Build wheelhouse action

description: >
  Generates compressed artifacts for the wheelhouse of a Python library. The
  wheelhouse contains all the necessary dependencies to install the project.
  This allows for local installations and avoids the need to connect to the
  online PyPI index.

inputs:

  # Required inputs

  library-name:
    description: >
      Name of the Python library. This is the name used when uploading the wheel
      and source distribution as artifacts. The name should be the same one used
      in the PyPI index.
    required: true
    type: string

  library-namespace:
    description: >
      Namespace of the Python library. The namespace is the path used when
      importing the library in Python. The library requires to have a
      ``__version__`` variable at its top ``__init__.py`` file. 
    required: true
    type: string

  operating-system:
    description: >
      Name of the operating system where the library is installed.
    required: true
    type: string

  python-version:
    description: >
      Python version used for installing and running ``pre-commit``.
    required: true
    type: string

  # Optional inputs

  use-python-cache:
    description: >
      If ``true``, uses Python cache to install previously downloaded
      libraries. When set to ``false``, all the required libraries are
      downloaded from the `PyPI <https://pypi.org>`_ index. To use this
      variable, your project needs to be installed using `the pyproject.toml
      file <https://dev.docs.pyansys.com/dev/packaging/structure.html#the-pyproject-toml-file>`_.
    required: false
    default: true
    type: boolean

runs:
  using: "composite"
  steps:

    - name: "Install Git and clone project"
      uses: actions/checkout@v3
  
    - name: "Set up Python ${{ inputs.python-version }}"
      uses: pyansys/actions/_setup-python@main
      with:
        python-version: ${{ inputs.python-version }}
        use-cache: ${{ inputs.use-python-cache }}

    - name: "Update pip and install the build and wheel libraries"
      shell: bash
      run: |
        python -m pip install --upgrade pip build wheel

    - name: "Install the library"
      shell: bash
      run: |
        python -m pip install .

    - name: "Verify library is properly installed and get its version number"
      shell: bash
      run: |
        echo "library_version=$(python -c "from ${{ inputs.library-namespace }} import __version__; print(__version__)")" >> $GITHUB_ENV

    - name: "Generate the wheelhouse"
      shell: bash
      run: |
        python -m pip wheel . -w wheelhouse

    - name: "Compress the wheelhouse"
      uses: vimtor/action-zip@v1.1
      with:
        files: wheelhouse
        dest: ${{ inputs.library-name }}-v${{ env.library_version }}-${{ env.wheelhouse_target }}-${{ inputs.operating-system }}-${{ inputs.python-version }}.zip

    - name: "Upload the compressed wheelhouse"
      uses: actions/upload-artifact@v3
      with:
        name: ${{ inputs.library-name }}-v${{ env.library_version }}-${{ env.wheelhouse_target }}-${{ inputs.operating-system }}-${{ inputs.python-version }}
        path: ${{ inputs.library-name }}-v${{ env.library_version }}-${{ env.wheelhouse_target }}-${{ inputs.operating-system }}-${{ inputs.python-version }}.zip
        retention-days: 7
