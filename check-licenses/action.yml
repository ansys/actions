name: >
  Check licenses action

description: |
  Verifies if the licenses of the dependencies installed in the current
  environment are compliant with PyAnsys guidelines. This action is assumed to
  be used in its own job step. It clones the project and installs the project with
  its runtime dependencies.

  .. jinja:: check-licenses

      .. grid:: 1 1 1 2
          :gutter: 2

          .. grid-item-card:: :octicon:`codescan-checkmark` Accepted third party licenses

              {% for license in accepted_licenses %}
              * {{ license }}
              {% endfor %}

          .. grid-item-card:: :octicon:`package` Ignored packages

              {% for package in ignored_packages %}
              * {{ package }}
              {% endfor %}

  .. admonition:: Projects requiring additional licenses or packages

      If a certain project requires a license or package that is not supported,
      `open an issue <https://github.com/ansys/actions/issues>`_ in the
      `official ansys/actions repository
      <https://github.com/ansys/actions>`_. For additional support, please
      contact the `PyAnsys support <mailto:support@pyansys.com>`_.

inputs:

  # Optional inputs

  python-version:
    description: >
      Python version used for installing and running ``pre-commit``.
    default: '3.10'
    required: false
    type: string

  use-python-cache:
    description: >
      Whether to use the Python cache for installing previously downloaded
      libraries. If ``true``, previously downloaded libraries are installed from the
      Python cache. If ``false``, libraries are downloaded from the PyPI index.
    required: false
    default: true
    type: boolean

  target:
    description: >
      Optional target used during the building process.
    required: false
    default: ''
    type: string


runs:
  using: "composite"
  steps:
    - name: "Install Git and clone project"
      uses: actions/checkout@v3

    - name: "Set up Python"
      uses: ansys/actions/_setup-python@v4
      with:
        python-version: ${{ inputs.python-version }}
        use-cache: ${{ inputs.use-python-cache }}

    - name: "Update pip and install the pip-licenses library"
      shell: bash
      run: |
        python -m pip install -U pip pip-licenses

    - name: "Check if specific target is requested"
      shell: bash
      run: |
        echo "install_target=$( [[ '${{ inputs.target }}' == '' ]] && echo '.' || echo '.[${{ inputs.target }}]')" >> $GITHUB_ENV

    - name: "Install Python library"
      if: inputs.skip-install == 'false'
      shell: bash
      run: pip install ${{ env.install_target }}

    - name: "Download the list of accepted and ignored packages"
      shell: bash
      run: |
        wget https://raw.githubusercontent.com/ansys/actions/main/check-licenses/accepted-licenses.txt
        wget https://raw.githubusercontent.com/ansys/actions/main/check-licenses/ignored-packages.txt

    - name: "Check licences of packages"
      shell: bash
      run: |
        # Load accepted licenses
        mapfile licenses_from_txt < accepted-licenses.txt
        accepted_licenses=''
        for license in ${licenses_from_txt[*]}; do accepted_licenses+="$license\|"; done
          accepted_licenses=${accepted_licenses::-2}
        echo "Accepted licenses: $accepted_licenses"

        # Load accepted packages
        mapfile ignored_packages_from_txt < ignored-packages.txt
        ignored_packages=''
        for pckg in ${ignored_packages_from_txt[*]}; do ignored_packages+="$pckg "; done
          ignored_packages_from_txt=${ignored_packages_from_txt::-1}
        echo "Ignored packages: $ignored_packages"

        # Verify if the Python environment contains invalid licenses
        if [[ -z $(pip-licenses --summary --ignore-packages $ignored_packages | grep -v $accepted_licenses | tail -n+2) ]]; then
          echo "All licenses are valid."
        else
          echo -e "\nInvalid licenses found:\n"
          pip-licenses --ignore-packages $ignored_packages | grep -v $accepted_licenses | awk 'NR>1 {print $1 " " $2 " has " $3 " license"}'
          exit 1
        fi
