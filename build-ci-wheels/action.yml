# Copyright (C) 2022 - 2024 ANSYS, Inc. and/or its affiliates.
# SPDX-License-Identifier: MIT
#
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

name: >
  Build CI wheels

description: |
  Build wheels for a Python library containing compiled source code. This action
  is expected to be used within a matrix job. Its goal is to generate wheel
  files for every combination of operating system, build system, and Python
  version. The action uses the `cibuildwheel
  <https://github.com/pypa/cibuildwheel>`_ behind the scenes.

  .. note::

      This actions should only be used by libraries including source code that
      needs to be compiled.

inputs:

  # Required inputs

  python-version:
    description: >
      Python version used for building the wheels.
    required: true
    type: string

  # Optional inputs

  cibw-build:
    description: >
      Desired build wheel CPython version.
    default: 'cp310-*'
    required: false
    type: string

  cibw-skip:
    description: >
      Desired conditions to skip when building the wheels.
    default: "*-musllinux*"
    required: false
    type: string

  cibw-archs:
    description: >
      Desired build architecture.
    default: "auto"
    required: false
    type: string

  requires-pypy:
      description: >
        Whether to generate wheels for wheel files for `PyPy
        <https://www.pypy.org/>`_ in addition to the wheel files for CPython.
        Default value is ``false``.
      default: false
      required: false
      type: boolean

runs:
  using: "composite"
  steps:

    - name: "Install Git and clone project"
      uses: actions/checkout@v4

    - name: "Set up QEMU"
      if: ${{ inputs.cibw-archs == 'aarch64' }}
      uses: docker/setup-qemu-action@v2
      with:
        platforms: arm64

    - name: "Build wheels for CPython ${{ inputs.python-version }}"
      if: ${{ inputs.cibw-build  != 'cp38-*' && inputs.requires-pypy == 'false' }}
      uses: pypa/cibuildwheel@v2.16.2
      env:
        CIBW_BUILD: ${{ inputs.cibw-build }}
        CIBW_SKIP: ${{ inputs.cibw-skip }}
        CIBW_MANYLINUX_X86_64_IMAGE: manylinux2014
        CIBW_MANYLINUX_I686_IMAGE: manylinux2014
        CIBW_ARCHS: ${{ inputs.cibw-archs }}

    - name: "Build wheels for CPython 3.8"
      if: ${{ inputs.cibw-build == 'cp38-*' && inputs.requires-pypy == 'false' }}
      uses: pypa/cibuildwheel@v2.16.2
      env:
        CIBW_BUILD: ${{ inputs.cibw-build }}
        CIBW_SKIP: ${{ inputs.cibw-skip }}
        CIBW_MANYLINUX_X86_64_IMAGE: manylinux2010
        CIBW_MANYLINUX_I686_IMAGE: manylinux2010
        CIBW_ARCHS: ${{ inputs.cibw-archs }}

    - name: "Build wheels for PyPy"
      if: ${{ inputs.requires-pypy == 'true' && inputs.cibw-archs != 'aarch64' }}
      uses: pypa/cibuildwheel@v2.16.2
      env:
        CIBW_BUILD: "pp38-* pp39-*"
        CIBW_SKIP: ${{ inputs.cibw-skip }}
        CIBW_ARCHS: ${{ inputs.cibw-archs }}

    - name: "Upload wheel"
      uses: actions/upload-artifact@v4
      with:
        name: wheels
        path: ./wheelhouse/*.whl
        retention-days: 7
