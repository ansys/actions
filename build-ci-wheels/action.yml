name: "Build wheels for a C-extension Python library."
description: "Build wheels for a C-extension Python library."

inputs:
  python-version:
    description: 'Desired Python version.'
    default: '3.10'
    required: false
    type: string
  use-python-cache:
    description: 'Whether to use Python cache or not. Requires a pyproject.toml file.'
    required: false
    default: true
    type: boolean
  cibw-build:
    description: 'Desired build wheel CPython version.'
    default: 'cp310-*'
    required: false
    type: string
  cibw-skip:
    description: 'Desired build wheel for skipping.'
    default: "*-musllinux*"
    required: false
    type: string
  cibw-archs:
    description: 'Desired build arhitecture.'
    default: "auto"
    required: false
    type: string
  requires-pypy:
      description: 'Whether requires build wheel for PyPy.'
      default: false
      required: false
      type: boolean
  checkout:
      description: 'Whether to checkout the repository or not'
      default: true
      required: false
      type: boolean

runs:
  using: "composite"
  steps:

    - name: "Install Git and clone project"
      uses: actions/checkout@v3
      if: ${{ input.checkout == 'true' }}
    
    - name: "Set up Python ${{ inputs.python-version }}"
      uses: pyansys/actions/_setup-python@main
      with:
        python-version: ${{ inputs.python-version }}
        use-cache: ${{ inputs.use-python-cache }}
   
    - name: "Set up QEMU"
      if: ${{ inputs.cibw-archs == 'aarch64' }}
      uses: docker/setup-qemu-action@v2
      with:
        platforms: arm64

    - name: "Build wheels for CPython ${{ inputs.python-version }}"
      if: ${{ inputs.cibw-build  != 'cp38-*' && inputs.requires-pypy == 'false' }}
      uses: pypa/cibuildwheel@v2.11.1
      env:
        CIBW_BUILD: ${{ inputs.cibw-build }}
        CIBW_SKIP: ${{ inputs.cibw-skip }}
        CIBW_MANYLINUX_X86_64_IMAGE: manylinux2014
        CIBW_MANYLINUX_I686_IMAGE: manylinux2014
        CIBW_ARCHS: ${{ inputs.cibw-archs }}

    - name: "Build wheels for CPython 3.8"
      if: ${{ inputs.cibw-build == 'cp38-*' && inputs.requires-pypy == 'false' }}
      uses: pypa/cibuildwheel@v2.11.1
      env:
        CIBW_BUILD: ${{ inputs.cibw-build }}
        CIBW_SKIP: ${{ inputs.cibw-skip }}
        CIBW_MANYLINUX_X86_64_IMAGE: manylinux2010
        CIBW_MANYLINUX_I686_IMAGE: manylinux2010
        CIBW_ARCHS: ${{ inputs.cibw-archs }}

    - name: "Build wheels for PyPy"
      if: ${{ inputs.requires-pypy == 'true' && inputs.cibw-archs != 'aarch64' }}
      uses: pypa/cibuildwheel@v2.11.1
      env:
        CIBW_BUILD: "pp38-* pp39-*"
        CIBW_SKIP: ${{ inputs.cibw-skip }}
        CIBW_ARCHS: ${{ inputs.cibw-archs }}

    - name: "Upload wheel"
      uses: actions/upload-artifact@v3
      with:
        name: wheels
        path: ./wheelhouse/*.whl
        retention-days: 7
